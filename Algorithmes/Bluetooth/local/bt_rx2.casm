;/////////////////////////////////////////////////////////////////////////////////
;// Code Generator: BoostC Compiler - http://www.sourceboost.com
;// Version       : 6.70
;// License Type  : Pro License
;// Limitations   : PIC12,PIC16 max code size:Unlimited, max RAM banks:Unlimited
;/////////////////////////////////////////////////////////////////////////////////

//************************************************************************************
//**  
//**  File name:     Z:\product information\PICmicro and E-blocks\EB024\EB024-00-2\Factory test routine\flowcode files\bt_rx2.c
//**  Generated by:  Flowcode v3.2.2.40
//**  Date:          Monday, October 01, 2007 15:58:02
//**  Licence:       Professional
//**  Registered to: Ben Rowland
//**  
//**  
//**  http://www.matrixmultimedia.com
//************************************************************************************


#define MX_PIC

//Defines for microcontroller
#define P16F877A
#define MX_EE
#define MX_EE_TYPE2
#define MX_EE_SIZE 256
#define MX_SPI
#define MX_SPI_C
#define MX_SPI_SDI 4
#define MX_SPI_SDO 5
#define MX_SPI_SCK 3
#define MX_UART
#define MX_UART_C
#define MX_UART_TX 6
#define MX_UART_RX 7
#define MX_I2C
#define MX_MI2C
#define MX_I2C_C
#define MX_I2C_SDA 4
#define MX_I2C_SCL 3
#define MX_PWM
#define MX_PWM_CNT 2
#define MX_PWM_TRIS1 trisc
#define MX_PWM_1 2
#define MX_PWM_TRIS2 trisc
#define MX_PWM_2 1

//Functions
#include <system.h>
#pragma CLOCK_FREQ 19660800

//Configuration data
#pragma DATA 0x2007, 0x3f3a

//Internal functions
#include "C:\Program Files\Matrix Multimedia\Flowcode V3\FCD\internals.h"

//Macro function declarations
void FCM_INTERRUPT_TMR0();
void FCM_INTERRUPT_RB0INT();
void FCM_INTERRUPT_PORTB();
void FCM_ESCAPE();


//Variable declarations
char FCV_ERR;
char FCV_LOOP;
char FCV_IN;
char FCV_CHAR;
char FCV_RET;




//LCDDisplay0: //Macro function declarations

void FCD_LCDDisplay0_GetDefines();
void FCD_LCDDisplay0_Start();
void FCD_LCDDisplay0_Clear();
void FCD_LCDDisplay0_PrintASCII(char Character);
void FCD_LCDDisplay0_Command(char in);
void FCD_LCDDisplay0_RawSend(char in, char mask);
void FCD_LCDDisplay0_Cursor(char x, char y);
void FCD_LCDDisplay0_PrintNumber(short Number);
void FCD_LCDDisplay0_PrintString(char* String, char MSZ_String);


//Bluetooth0: //Macro function declarations

void FCD_Bluetooth0_GetDefines();
void FCD_Bluetooth0_Initialize();
char FCD_Bluetooth0_CreateCommand(char ch);
char FCD_Bluetooth0_SendCommand(char bExpectEcho, char bSendCR);
char FCD_Bluetooth0_WaitForResponse(char response_code, char timeout);
char FCD_Bluetooth0_StringReceive();
char FCD_Bluetooth0_StringRead(char idx);
char FCD_Bluetooth0_SendScript(char idx);

//Supplementary defines


//Macro implementations

void FCM_INTERRUPT_TMR0()
{
	
}

void FCM_INTERRUPT_RB0INT()
{
	
}

void FCM_INTERRUPT_PORTB()
{
	
}

void FCM_ESCAPE()

{
	
	//Delay
	//Delay: 150 ms
	delay_ms(150);
03D6  3096  	MOVLW 0x96
03D7  00F2  	MOVWF delay_ms_00000_arg_del
03D8  201E  	CALL delay_ms_00000



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("^")
	FCV_RET = FCD_Bluetooth0_CreateCommand('^');
03D9  305E  	MOVLW 0x5E
03DA  00F0  	MOVWF FCD_Blueto_00020_arg_ch
03DB  23C3  	CALL FCD_Blueto_00020
03DC  0871  	MOVF CompTempVarRet629, W
03DD  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(0, 0)
	FCV_RET = FCD_Bluetooth0_SendCommand(0, 0);
03DE  01F0  	CLRF FCD_Blueto_00021_arg_bExpectEcho
03DF  01F1  	CLRF FCD_Blueto_00021_arg_bSendCR
03E0  2392  	CALL FCD_Blueto_00021
03E1  0874  	MOVF CompTempVarRet631, W
03E2  00E5  	MOVWF gbl_FCV_RET



	//Delay
	//Delay: 150 ms
	delay_ms(150);
03E3  3096  	MOVLW 0x96
03E4  00F2  	MOVWF delay_ms_00000_arg_del
03E5  201E  	CALL delay_ms_00000



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("^")
	FCV_RET = FCD_Bluetooth0_CreateCommand('^');
03E6  305E  	MOVLW 0x5E
03E7  00F0  	MOVWF FCD_Blueto_00020_arg_ch
03E8  23C3  	CALL FCD_Blueto_00020
03E9  0871  	MOVF CompTempVarRet629, W
03EA  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(0, 0)
	FCV_RET = FCD_Bluetooth0_SendCommand(0, 0);
03EB  01F0  	CLRF FCD_Blueto_00021_arg_bExpectEcho
03EC  01F1  	CLRF FCD_Blueto_00021_arg_bSendCR
03ED  2392  	CALL FCD_Blueto_00021
03EE  0874  	MOVF CompTempVarRet631, W
03EF  00E5  	MOVWF gbl_FCV_RET



	//Delay
	//Delay: 150 ms
	delay_ms(150);
03F0  3096  	MOVLW 0x96
03F1  00F2  	MOVWF delay_ms_00000_arg_del
03F2  201E  	CALL delay_ms_00000



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("^")
	FCV_RET = FCD_Bluetooth0_CreateCommand('^');
03F3  305E  	MOVLW 0x5E
03F4  00F0  	MOVWF FCD_Blueto_00020_arg_ch
03F5  23C3  	CALL FCD_Blueto_00020
03F6  0871  	MOVF CompTempVarRet629, W
03F7  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(0, 0)
	FCV_RET = FCD_Bluetooth0_SendCommand(0, 0);
03F8  01F0  	CLRF FCD_Blueto_00021_arg_bExpectEcho
03F9  01F1  	CLRF FCD_Blueto_00021_arg_bSendCR
03FA  2392  	CALL FCD_Blueto_00021
03FB  0874  	MOVF CompTempVarRet631, W
03FC  00E5  	MOVWF gbl_FCV_RET



	//Delay
	//Delay: 150 ms
	delay_ms(150);
03FD  3096  	MOVLW 0x96
03FE  00F2  	MOVWF delay_ms_00000_arg_del
03FF  201E  	CALL delay_ms_00000



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::WaitForResponse(1, 200)
	FCV_RET = FCD_Bluetooth0_WaitForResponse(1, 200);
0400  3001  	MOVLW 0x01
0401  00F0  	MOVWF FCD_Blueto_00022_arg_respo_00023
0402  30C8  	MOVLW 0xC8
0403  00F1  	MOVWF FCD_Blueto_00022_arg_timeout
0404  2191  	CALL FCD_Blueto_00022
0405  0877  	MOVF CompTempVarRet634, W
0406  00E5  	MOVWF gbl_FCV_RET



}
0407  0008  	RETURN




//LCDDisplay0: //Macro implementations


void FCD_LCDDisplay0_GetDefines()
{
	
	}  //Dummy end of function to allow defines to be added correctly

	//component connections
	#define LCD_3212964_PORT    portb
	#define LCD_3212964_TRIS    trisb
	#define LCD_3212964_BIT0    0
	#define LCD_3212964_BIT1    1
	#define LCD_3212964_BIT2    2
	#define LCD_3212964_BIT3    3
	#define LCD_3212964_RS      4
	#define LCD_3212964_E       5

	#ifdef _BOOSTC
	  #define LCD_3212964_DELAY   delay_10us(10)
	#endif
	#ifdef _C2C_
	  #define LCD_3212964_DELAY   delay_us(100)
	#endif
	#ifndef LCD_3212964_DELAY
	  #define LCD_3212964_DELAY   delay_us(100)
	#endif



	//internal function prototypes
	void LCD_3212964_RawSend(char nIn, char nMask);

	//internal function implementations
	void LCD_3212964_RawSend(char nIn, char nMask)

	{
		unsigned char pt;
		unsigned char outVal;
		outVal = LCD_3212964_PORT;
0145  1283  	BCF STATUS, RP0
0146  1303  	BCF STATUS, RP1
0147  0806  	MOVF gbl_portb, W
0148  00F8  	MOVWF LCD_321296_00026_1_outVal

		clear_bit(outVal, LCD_3212964_BIT0);
0149  1078  	BCF LCD_321296_00026_1_outVal,0

		clear_bit(outVal, LCD_3212964_BIT1);
014A  10F8  	BCF LCD_321296_00026_1_outVal,1

		clear_bit(outVal, LCD_3212964_BIT2);
014B  1178  	BCF LCD_321296_00026_1_outVal,2

		clear_bit(outVal, LCD_3212964_BIT3);
014C  11F8  	BCF LCD_321296_00026_1_outVal,3

		clear_bit(outVal, LCD_3212964_RS);
014D  1278  	BCF LCD_321296_00026_1_outVal,4

		clear_bit(outVal, LCD_3212964_E);
014E  12F8  	BCF LCD_321296_00026_1_outVal,5

		pt = ((nIn >> 4) & 0x0f);
014F  0E75  	SWAPF LCD_321296_00026_arg_nIn, W
0150  390F  	ANDLW 0x0F
0151  00F9  	MOVWF CompTempVar685
0152  300F  	MOVLW 0x0F
0153  0579  	ANDWF CompTempVar685, W
0154  00F7  	MOVWF LCD_321296_00026_1_pt

		if (pt & 0x01)
0155  1877  	BTFSC LCD_321296_00026_1_pt,0

		    set_bit(outVal, LCD_3212964_BIT0);
0156  1478  	BSF LCD_321296_00026_1_outVal,0

		if (pt & 0x02)
0157  18F7  	BTFSC LCD_321296_00026_1_pt,1

		    set_bit(outVal, LCD_3212964_BIT1);
0158  14F8  	BSF LCD_321296_00026_1_outVal,1

		if (pt & 0x04)
0159  1977  	BTFSC LCD_321296_00026_1_pt,2

		    set_bit(outVal, LCD_3212964_BIT2);
015A  1578  	BSF LCD_321296_00026_1_outVal,2

		if (pt & 0x08)
015B  19F7  	BTFSC LCD_321296_00026_1_pt,3

		    set_bit(outVal, LCD_3212964_BIT3);
015C  15F8  	BSF LCD_321296_00026_1_outVal,3

		if (nMask)
015D  08F6  	MOVF LCD_321296_00026_arg_nMask, F
015E  1D03  	BTFSS STATUS,Z

		    set_bit(outVal, LCD_3212964_RS);
015F  1678  	BSF LCD_321296_00026_1_outVal,4

		LCD_3212964_PORT = outVal;
0160  0878  	MOVF LCD_321296_00026_1_outVal, W
0161  0086  	MOVWF gbl_portb

		LCD_3212964_DELAY;
0162  300A  	MOVLW 0x0A
0163  00F9  	MOVWF delay_10us_00000_arg_del
0164  2010  	CALL delay_10us_00000

		set_bit (LCD_3212964_PORT, LCD_3212964_E);
0165  1686  	BSF gbl_portb,5

		LCD_3212964_DELAY;
0166  300A  	MOVLW 0x0A
0167  00F9  	MOVWF delay_10us_00000_arg_del
0168  2010  	CALL delay_10us_00000

		clear_bit (LCD_3212964_PORT, LCD_3212964_E);
0169  1286  	BCF gbl_portb,5

		pt = (nIn & 0x0f);
016A  300F  	MOVLW 0x0F
016B  0575  	ANDWF LCD_321296_00026_arg_nIn, W
016C  00F7  	MOVWF LCD_321296_00026_1_pt

		LCD_3212964_DELAY;
016D  300A  	MOVLW 0x0A
016E  00F9  	MOVWF delay_10us_00000_arg_del
016F  2010  	CALL delay_10us_00000

		outVal = LCD_3212964_PORT;
0170  0806  	MOVF gbl_portb, W
0171  00F8  	MOVWF LCD_321296_00026_1_outVal

		clear_bit(outVal, LCD_3212964_BIT0);
0172  1078  	BCF LCD_321296_00026_1_outVal,0

		clear_bit(outVal, LCD_3212964_BIT1);
0173  10F8  	BCF LCD_321296_00026_1_outVal,1

		clear_bit(outVal, LCD_3212964_BIT2);
0174  1178  	BCF LCD_321296_00026_1_outVal,2

		clear_bit(outVal, LCD_3212964_BIT3);
0175  11F8  	BCF LCD_321296_00026_1_outVal,3

		clear_bit(outVal, LCD_3212964_RS);
0176  1278  	BCF LCD_321296_00026_1_outVal,4

		clear_bit(outVal, LCD_3212964_E);
0177  12F8  	BCF LCD_321296_00026_1_outVal,5

		if (pt & 0x01)
0178  1877  	BTFSC LCD_321296_00026_1_pt,0

		    set_bit(outVal, LCD_3212964_BIT0);
0179  1478  	BSF LCD_321296_00026_1_outVal,0

		if (pt & 0x02)
017A  18F7  	BTFSC LCD_321296_00026_1_pt,1

		    set_bit(outVal, LCD_3212964_BIT1);
017B  14F8  	BSF LCD_321296_00026_1_outVal,1

		if (pt & 0x04)
017C  1977  	BTFSC LCD_321296_00026_1_pt,2

		    set_bit(outVal, LCD_3212964_BIT2);
017D  1578  	BSF LCD_321296_00026_1_outVal,2

		if (pt & 0x08)
017E  19F7  	BTFSC LCD_321296_00026_1_pt,3

		    set_bit(outVal, LCD_3212964_BIT3);
017F  15F8  	BSF LCD_321296_00026_1_outVal,3

		if (nMask)
0180  08F6  	MOVF LCD_321296_00026_arg_nMask, F
0181  1D03  	BTFSS STATUS,Z

		    set_bit(outVal, LCD_3212964_RS);
0182  1678  	BSF LCD_321296_00026_1_outVal,4

		LCD_3212964_PORT = outVal;
0183  0878  	MOVF LCD_321296_00026_1_outVal, W
0184  0086  	MOVWF gbl_portb

		LCD_3212964_DELAY;
0185  300A  	MOVLW 0x0A
0186  00F9  	MOVWF delay_10us_00000_arg_del
0187  2010  	CALL delay_10us_00000

		set_bit (LCD_3212964_PORT, LCD_3212964_E);
0188  1686  	BSF gbl_portb,5

		LCD_3212964_DELAY;
0189  300A  	MOVLW 0x0A
018A  00F9  	MOVWF delay_10us_00000_arg_del
018B  2010  	CALL delay_10us_00000

		clear_bit (LCD_3212964_PORT, LCD_3212964_E);
018C  1286  	BCF gbl_portb,5

		LCD_3212964_DELAY;
018D  300A  	MOVLW 0x0A
018E  00F9  	MOVWF delay_10us_00000_arg_del
018F  2010  	CALL delay_10us_00000

	}
0190  0008  	RETURN


	// Dummy function to close the defines section off
	void LCD_3212964_Dummy_Function();
	void LCD_3212964_Dummy_Function()
	{

}

void FCD_LCDDisplay0_Start()

{
	
		clear_bit(LCD_3212964_TRIS, LCD_3212964_BIT0);
0529  1683  	BSF STATUS, RP0
052A  1303  	BCF STATUS, RP1
052B  1006  	BCF gbl_trisb,0

		clear_bit(LCD_3212964_TRIS, LCD_3212964_BIT1);
052C  1086  	BCF gbl_trisb,1

		clear_bit(LCD_3212964_TRIS, LCD_3212964_BIT2);
052D  1106  	BCF gbl_trisb,2

		clear_bit(LCD_3212964_TRIS, LCD_3212964_BIT3);
052E  1186  	BCF gbl_trisb,3

		clear_bit(LCD_3212964_TRIS, LCD_3212964_RS);
052F  1206  	BCF gbl_trisb,4

		clear_bit(LCD_3212964_TRIS, LCD_3212964_E);
0530  1286  	BCF gbl_trisb,5


		delay_ms(12);
0531  300C  	MOVLW 0x0C
0532  00F2  	MOVWF delay_ms_00000_arg_del
0533  201E  	CALL delay_ms_00000


		LCD_3212964_RawSend(0x33, 0);
0534  3033  	MOVLW 0x33
0535  00F5  	MOVWF LCD_321296_00026_arg_nIn
0536  01F6  	CLRF LCD_321296_00026_arg_nMask
0537  2145  	CALL LCD_321296_00026

		delay_ms(2);
0538  3002  	MOVLW 0x02
0539  00F2  	MOVWF delay_ms_00000_arg_del
053A  201E  	CALL delay_ms_00000

		LCD_3212964_RawSend(0x32, 0);
053B  3032  	MOVLW 0x32
053C  00F5  	MOVWF LCD_321296_00026_arg_nIn
053D  01F6  	CLRF LCD_321296_00026_arg_nMask
053E  2145  	CALL LCD_321296_00026

		delay_ms(2);
053F  3002  	MOVLW 0x02
0540  00F2  	MOVWF delay_ms_00000_arg_del
0541  201E  	CALL delay_ms_00000

		LCD_3212964_RawSend(0x2c, 0);
0542  302C  	MOVLW 0x2C
0543  00F5  	MOVWF LCD_321296_00026_arg_nIn
0544  01F6  	CLRF LCD_321296_00026_arg_nMask
0545  2145  	CALL LCD_321296_00026

		delay_ms(2);
0546  3002  	MOVLW 0x02
0547  00F2  	MOVWF delay_ms_00000_arg_del
0548  201E  	CALL delay_ms_00000

		LCD_3212964_RawSend(0x06, 0);
0549  3006  	MOVLW 0x06
054A  00F5  	MOVWF LCD_321296_00026_arg_nIn
054B  01F6  	CLRF LCD_321296_00026_arg_nMask
054C  2145  	CALL LCD_321296_00026

		delay_ms(2);
054D  3002  	MOVLW 0x02
054E  00F2  	MOVWF delay_ms_00000_arg_del
054F  201E  	CALL delay_ms_00000

		LCD_3212964_RawSend(0x0c, 0);
0550  300C  	MOVLW 0x0C
0551  00F5  	MOVWF LCD_321296_00026_arg_nIn
0552  01F6  	CLRF LCD_321296_00026_arg_nMask
0553  2145  	CALL LCD_321296_00026

		delay_ms(2);
0554  3002  	MOVLW 0x02
0555  00F2  	MOVWF delay_ms_00000_arg_del
0556  201E  	CALL delay_ms_00000


		//clear the display
		LCD_3212964_RawSend(0x01, 0);
0557  3001  	MOVLW 0x01
0558  00F5  	MOVWF LCD_321296_00026_arg_nIn
0559  01F6  	CLRF LCD_321296_00026_arg_nMask
055A  2145  	CALL LCD_321296_00026

		delay_ms(2);
055B  3002  	MOVLW 0x02
055C  00F2  	MOVWF delay_ms_00000_arg_del
055D  201E  	CALL delay_ms_00000

		LCD_3212964_RawSend(0x02, 0);
055E  3002  	MOVLW 0x02
055F  00F5  	MOVWF LCD_321296_00026_arg_nIn
0560  01F6  	CLRF LCD_321296_00026_arg_nMask
0561  2145  	CALL LCD_321296_00026

		delay_ms(2);
0562  3002  	MOVLW 0x02
0563  00F2  	MOVWF delay_ms_00000_arg_del
0564  201E  	CALL delay_ms_00000


}
0565  0008  	RETURN


void FCD_LCDDisplay0_Clear()

{
	
		LCD_3212964_RawSend(0x01, 0);
051A  3001  	MOVLW 0x01
051B  00F5  	MOVWF LCD_321296_00026_arg_nIn
051C  01F6  	CLRF LCD_321296_00026_arg_nMask
051D  2145  	CALL LCD_321296_00026

		delay_ms(2);
051E  3002  	MOVLW 0x02
051F  00F2  	MOVWF delay_ms_00000_arg_del
0520  201E  	CALL delay_ms_00000

		LCD_3212964_RawSend(0x02, 0);
0521  3002  	MOVLW 0x02
0522  00F5  	MOVWF LCD_321296_00026_arg_nIn
0523  01F6  	CLRF LCD_321296_00026_arg_nMask
0524  2145  	CALL LCD_321296_00026

		delay_ms(2);
0525  3002  	MOVLW 0x02
0526  00F2  	MOVWF delay_ms_00000_arg_del
0527  201E  	CALL delay_ms_00000


}
0528  0008  	RETURN


void FCD_LCDDisplay0_PrintASCII(char Character)

{
	
		LCD_3212964_RawSend(Character, 0x10);
0514  0870  	MOVF FCD_LCDDis_00028_arg_Character, W
0515  00F5  	MOVWF LCD_321296_00026_arg_nIn
0516  3010  	MOVLW 0x10
0517  00F6  	MOVWF LCD_321296_00026_arg_nMask
0518  2145  	CALL LCD_321296_00026


}
0519  0008  	RETURN


void FCD_LCDDisplay0_Command(char in)
{
	
		LCD_3212964_RawSend(in, 0);
		delay_ms(2);

}

void FCD_LCDDisplay0_RawSend(char in, char mask)
{
	//Error Reading Code For LCD Display::Macro_RawSend
}

void FCD_LCDDisplay0_Cursor(char x, char y)

{
	
	  #if (2 == 1)
	    y=0x80;
	  #endif

	  #if (2 == 2)
		if (y==0)
0503  08F1  	MOVF FCD_LCDDis_0002B_arg_y, F
0504  1D03  	BTFSS STATUS,Z
0505  2D09  	GOTO	label268439864
0509        label268439864

			y=0x80;
0506  3080  	MOVLW 0x80
0507  00F1  	MOVWF FCD_LCDDis_0002B_arg_y

		else
0508  2D0B  	GOTO	label268439867
050B        label268439867

			y=0xc0;
0509  30C0  	MOVLW 0xC0
050A  00F1  	MOVWF FCD_LCDDis_0002B_arg_y

	  #endif

	  #if (2 == 4)
		if (y==0)
			y=0x80;
		else if (y==1)
			y=0xc0;
		else if (y==2)
			y=0x94;
		else
			y=0xd4;
	  #endif

		LCD_3212964_RawSend(y+x, 0);
050B  0870  	MOVF FCD_LCDDis_0002B_arg_x, W
050C  0771  	ADDWF FCD_LCDDis_0002B_arg_y, W
050D  00F5  	MOVWF LCD_321296_00026_arg_nIn
050E  01F6  	CLRF LCD_321296_00026_arg_nMask
050F  2145  	CALL LCD_321296_00026

		delay_ms(2);
0510  3002  	MOVLW 0x02
0511  00F2  	MOVWF delay_ms_00000_arg_del
0512  201E  	CALL delay_ms_00000


}
0513  0008  	RETURN


void FCD_LCDDisplay0_PrintNumber(short Number)

{
	
		short tmp_int;
		char tmp_byte;
		if (Number < 0)
0408  1FF1  	BTFSS FCD_LCDDis_0002C_arg_Number+D'1',7
0409  2C17  	GOTO	label268439884
0417        label268439884

		{
			LCD_3212964_RawSend('-', 0x10);
040A  302D  	MOVLW 0x2D
040B  00F5  	MOVWF LCD_321296_00026_arg_nIn
040C  3010  	MOVLW 0x10
040D  00F6  	MOVWF LCD_321296_00026_arg_nMask
040E  2145  	CALL LCD_321296_00026

			Number = 0 - Number;
040F  0870  	MOVF FCD_LCDDis_0002C_arg_Number, W
0410  3C00  	SUBLW 0x00
0411  00F5  	MOVWF CompTempVar686
0412  09F1  	COMF FCD_LCDDis_0002C_arg_Number+D'1', F
0413  1803  	BTFSC STATUS,C
0414  0AF1  	INCF FCD_LCDDis_0002C_arg_Number+D'1', F
0415  0875  	MOVF CompTempVar686, W
0416  00F0  	MOVWF FCD_LCDDis_0002C_arg_Number

		}

		tmp_int = Number;
0417  0870  	MOVF FCD_LCDDis_0002C_arg_Number, W
0418  00F2  	MOVWF FCD_LCDDis_0002C_1_tmp_int
0419  0871  	MOVF FCD_LCDDis_0002C_arg_Number+D'1', W
041A  00F3  	MOVWF FCD_LCDDis_0002C_1_tmp_int+D'1'

		if (Number >= 10000)
041B  3027  	MOVLW 0x27
041C  0271  	SUBWF FCD_LCDDis_0002C_arg_Number+D'1', W
041D  1D03  	BTFSS STATUS,Z
041E  2C21  	GOTO	label268439898
041F  3010  	MOVLW 0x10
0420  0270  	SUBWF FCD_LCDDis_0002C_arg_Number, W
0421        label268439898
0421  1C03  	BTFSS STATUS,C
0422  2C55  	GOTO	label268439918
0423  1BF1  	BTFSC FCD_LCDDis_0002C_arg_Number+D'1',7
0424  2C55  	GOTO	label268439918

		{
			tmp_byte = tmp_int / 10000;
0425  01F9  	CLRF CompTempVar689
0426  0872  	MOVF FCD_LCDDis_0002C_1_tmp_int, W
0427  00F5  	MOVWF __div_16_1_00003_arg_a
0428  0873  	MOVF FCD_LCDDis_0002C_1_tmp_int+D'1', W
0429  00F6  	MOVWF __div_16_1_00003_arg_a+D'1'
042A  1FF3  	BTFSS FCD_LCDDis_0002C_1_tmp_int+D'1',7
042B  2C32  	GOTO	label268439908
042C  09F5  	COMF __div_16_1_00003_arg_a, F
042D  09F6  	COMF __div_16_1_00003_arg_a+D'1', F
042E  0AF5  	INCF __div_16_1_00003_arg_a, F
042F  1903  	BTFSC STATUS,Z
0430  0AF6  	INCF __div_16_1_00003_arg_a+D'1', F
0431  0AF9  	INCF CompTempVar689, F
0432        label268439908
0432  3010  	MOVLW 0x10
0433  00F7  	MOVWF __div_16_1_00003_arg_b
0434  3027  	MOVLW 0x27
0435  00F8  	MOVWF __div_16_1_00003_arg_b+D'1'
0436  2124  	CALL __div_16_1_00003
0437  0820  	MOVF CompTempVarRet140, W
0438  00F4  	MOVWF FCD_LCDDis_0002C_1_tmp_byte
0439  1C79  	BTFSS CompTempVar689,0
043A  2C3D  	GOTO	label268439910
043B  09F4  	COMF FCD_LCDDis_0002C_1_tmp_byte, F
043C  0AF4  	INCF FCD_LCDDis_0002C_1_tmp_byte, F
043D        label268439910

			LCD_3212964_RawSend('0' + tmp_byte, 0x10);
043D  0874  	MOVF FCD_LCDDis_0002C_1_tmp_byte, W
043E  3E30  	ADDLW 0x30
043F  00F5  	MOVWF LCD_321296_00026_arg_nIn
0440  3010  	MOVLW 0x10
0441  00F6  	MOVWF LCD_321296_00026_arg_nMask
0442  2145  	CALL LCD_321296_00026


			while (tmp_byte > 0)
0443        label268439917
0443  0874  	MOVF FCD_LCDDis_0002C_1_tmp_byte, W
0444  3C00  	SUBLW 0x00
0445  1803  	BTFSC STATUS,C
0446  2C55  	GOTO	label268439918
0454  2C43  	GOTO	label268439917
0455        label268439918

			{
				tmp_int = tmp_int - 10000;
0447  3010  	MOVLW 0x10
0448  0272  	SUBWF FCD_LCDDis_0002C_1_tmp_int, W
0449  00F5  	MOVWF CompTempVar690
044A  3027  	MOVLW 0x27
044B  1C03  	BTFSS STATUS,C
044C  3028  	MOVLW 0x28
044D  0273  	SUBWF FCD_LCDDis_0002C_1_tmp_int+D'1', W
044E  00F6  	MOVWF CompTempVar691
044F  0875  	MOVF CompTempVar690, W
0450  00F2  	MOVWF FCD_LCDDis_0002C_1_tmp_int
0451  0876  	MOVF CompTempVar691, W
0452  00F3  	MOVWF FCD_LCDDis_0002C_1_tmp_int+D'1'

				tmp_byte--;
0453  03F4  	DECF FCD_LCDDis_0002C_1_tmp_byte, F

			}
		}
		if (Number >= 1000)
0455  3003  	MOVLW 0x03
0456  0271  	SUBWF FCD_LCDDis_0002C_arg_Number+D'1', W
0457  1D03  	BTFSS STATUS,Z
0458  2C5B  	GOTO	label268439926
0459  30E8  	MOVLW 0xE8
045A  0270  	SUBWF FCD_LCDDis_0002C_arg_Number, W
045B        label268439926
045B  1C03  	BTFSS STATUS,C
045C  2C90  	GOTO	label268439946
045D  1BF1  	BTFSC FCD_LCDDis_0002C_arg_Number+D'1',7
045E  2C90  	GOTO	label268439946

		{
			tmp_byte = tmp_int / 1000;
045F  01FA  	CLRF CompTempVar693
0460  0872  	MOVF FCD_LCDDis_0002C_1_tmp_int, W
0461  00F5  	MOVWF __div_16_1_00003_arg_a
0462  0873  	MOVF FCD_LCDDis_0002C_1_tmp_int+D'1', W
0463  00F6  	MOVWF __div_16_1_00003_arg_a+D'1'
0464  1FF3  	BTFSS FCD_LCDDis_0002C_1_tmp_int+D'1',7
0465  2C6C  	GOTO	label268439936
0466  09F5  	COMF __div_16_1_00003_arg_a, F
0467  09F6  	COMF __div_16_1_00003_arg_a+D'1', F
0468  0AF5  	INCF __div_16_1_00003_arg_a, F
0469  1903  	BTFSC STATUS,Z
046A  0AF6  	INCF __div_16_1_00003_arg_a+D'1', F
046B  0AFA  	INCF CompTempVar693, F
046C        label268439936
046C  30E8  	MOVLW 0xE8
046D  00F7  	MOVWF __div_16_1_00003_arg_b
046E  3003  	MOVLW 0x03
046F  00F8  	MOVWF __div_16_1_00003_arg_b+D'1'
0470  2124  	CALL __div_16_1_00003
0471  0820  	MOVF CompTempVarRet140, W
0472  00F9  	MOVWF CompTempVar692
0473  1C7A  	BTFSS CompTempVar693,0
0474  2C77  	GOTO	label268439938
0475  09F9  	COMF CompTempVar692, F
0476  0AF9  	INCF CompTempVar692, F
0477        label268439938
0477  0879  	MOVF CompTempVar692, W
0478  00F4  	MOVWF FCD_LCDDis_0002C_1_tmp_byte

			LCD_3212964_RawSend('0' + tmp_byte, 0x10);
0479  3E30  	ADDLW 0x30
047A  00F5  	MOVWF LCD_321296_00026_arg_nIn
047B  3010  	MOVLW 0x10
047C  00F6  	MOVWF LCD_321296_00026_arg_nMask
047D  2145  	CALL LCD_321296_00026


			while (tmp_byte > 0)
047E        label268439945
047E  0874  	MOVF FCD_LCDDis_0002C_1_tmp_byte, W
047F  3C00  	SUBLW 0x00
0480  1803  	BTFSC STATUS,C
0481  2C90  	GOTO	label268439946
048F  2C7E  	GOTO	label268439945
0490        label268439946

			{
				tmp_int = tmp_int - 1000;
0482  30E8  	MOVLW 0xE8
0483  0272  	SUBWF FCD_LCDDis_0002C_1_tmp_int, W
0484  00F5  	MOVWF CompTempVar694
0485  3003  	MOVLW 0x03
0486  1C03  	BTFSS STATUS,C
0487  3004  	MOVLW 0x04
0488  0273  	SUBWF FCD_LCDDis_0002C_1_tmp_int+D'1', W
0489  00F6  	MOVWF CompTempVar695
048A  0875  	MOVF CompTempVar694, W
048B  00F2  	MOVWF FCD_LCDDis_0002C_1_tmp_int
048C  0876  	MOVF CompTempVar695, W
048D  00F3  	MOVWF FCD_LCDDis_0002C_1_tmp_int+D'1'

				tmp_byte--;
048E  03F4  	DECF FCD_LCDDis_0002C_1_tmp_byte, F

			}
		}
		if (Number >= 100)
0490  0871  	MOVF FCD_LCDDis_0002C_arg_Number+D'1', W
0491  3A80  	XORLW 0x80
0492  00F5  	MOVWF CompTempVar696
0493  3080  	MOVLW 0x80
0494  0275  	SUBWF CompTempVar696, W
0495  1D03  	BTFSS STATUS,Z
0496  2C99  	GOTO	label268439956
0497  3064  	MOVLW 0x64
0498  0270  	SUBWF FCD_LCDDis_0002C_arg_Number, W
0499        label268439956
0499  1C03  	BTFSS STATUS,C
049A  2CC6  	GOTO	label268439976

		{
			tmp_byte = tmp_int / 100;
049B  01FA  	CLRF CompTempVar698
049C  0872  	MOVF FCD_LCDDis_0002C_1_tmp_int, W
049D  00F5  	MOVWF __div_16_1_00003_arg_a
049E  0873  	MOVF FCD_LCDDis_0002C_1_tmp_int+D'1', W
049F  00F6  	MOVWF __div_16_1_00003_arg_a+D'1'
04A0  1FF3  	BTFSS FCD_LCDDis_0002C_1_tmp_int+D'1',7
04A1  2CA8  	GOTO	label268439966
04A2  09F5  	COMF __div_16_1_00003_arg_a, F
04A3  09F6  	COMF __div_16_1_00003_arg_a+D'1', F
04A4  0AF5  	INCF __div_16_1_00003_arg_a, F
04A5  1903  	BTFSC STATUS,Z
04A6  0AF6  	INCF __div_16_1_00003_arg_a+D'1', F
04A7  0AFA  	INCF CompTempVar698, F
04A8        label268439966
04A8  3064  	MOVLW 0x64
04A9  00F7  	MOVWF __div_16_1_00003_arg_b
04AA  01F8  	CLRF __div_16_1_00003_arg_b+D'1'
04AB  2124  	CALL __div_16_1_00003
04AC  0820  	MOVF CompTempVarRet140, W
04AD  00F9  	MOVWF CompTempVar697
04AE  1C7A  	BTFSS CompTempVar698,0
04AF  2CB2  	GOTO	label268439968
04B0  09F9  	COMF CompTempVar697, F
04B1  0AF9  	INCF CompTempVar697, F
04B2        label268439968
04B2  0879  	MOVF CompTempVar697, W
04B3  00F4  	MOVWF FCD_LCDDis_0002C_1_tmp_byte

			LCD_3212964_RawSend('0' + tmp_byte, 0x10);
04B4  3E30  	ADDLW 0x30
04B5  00F5  	MOVWF LCD_321296_00026_arg_nIn
04B6  3010  	MOVLW 0x10
04B7  00F6  	MOVWF LCD_321296_00026_arg_nMask
04B8  2145  	CALL LCD_321296_00026


			while (tmp_byte > 0)
04B9        label268439975
04B9  0874  	MOVF FCD_LCDDis_0002C_1_tmp_byte, W
04BA  3C00  	SUBLW 0x00
04BB  1803  	BTFSC STATUS,C
04BC  2CC6  	GOTO	label268439976
04C5  2CB9  	GOTO	label268439975
04C6        label268439976

			{
				tmp_int = tmp_int - 100;
04BD  3064  	MOVLW 0x64
04BE  0272  	SUBWF FCD_LCDDis_0002C_1_tmp_int, W
04BF  00F5  	MOVWF CompTempVar699
04C0  1C03  	BTFSS STATUS,C
04C1  03F3  	DECF FCD_LCDDis_0002C_1_tmp_int+D'1', F
04C2  0875  	MOVF CompTempVar699, W
04C3  00F2  	MOVWF FCD_LCDDis_0002C_1_tmp_int

				tmp_byte--;
04C4  03F4  	DECF FCD_LCDDis_0002C_1_tmp_byte, F

			}
		}
		if (Number >= 10)
04C6  0871  	MOVF FCD_LCDDis_0002C_arg_Number+D'1', W
04C7  3A80  	XORLW 0x80
04C8  00F5  	MOVWF CompTempVar701
04C9  3080  	MOVLW 0x80
04CA  0275  	SUBWF CompTempVar701, W
04CB  1D03  	BTFSS STATUS,Z
04CC  2CCF  	GOTO	label268439986
04CD  300A  	MOVLW 0x0A
04CE  0270  	SUBWF FCD_LCDDis_0002C_arg_Number, W
04CF        label268439986
04CF  1C03  	BTFSS STATUS,C
04D0  2CFC  	GOTO	label268440006

		{
			tmp_byte = tmp_int / 10;
04D1  01FA  	CLRF CompTempVar703
04D2  0872  	MOVF FCD_LCDDis_0002C_1_tmp_int, W
04D3  00F5  	MOVWF __div_16_1_00003_arg_a
04D4  0873  	MOVF FCD_LCDDis_0002C_1_tmp_int+D'1', W
04D5  00F6  	MOVWF __div_16_1_00003_arg_a+D'1'
04D6  1FF3  	BTFSS FCD_LCDDis_0002C_1_tmp_int+D'1',7
04D7  2CDE  	GOTO	label268439996
04D8  09F5  	COMF __div_16_1_00003_arg_a, F
04D9  09F6  	COMF __div_16_1_00003_arg_a+D'1', F
04DA  0AF5  	INCF __div_16_1_00003_arg_a, F
04DB  1903  	BTFSC STATUS,Z
04DC  0AF6  	INCF __div_16_1_00003_arg_a+D'1', F
04DD  0AFA  	INCF CompTempVar703, F
04DE        label268439996
04DE  300A  	MOVLW 0x0A
04DF  00F7  	MOVWF __div_16_1_00003_arg_b
04E0  01F8  	CLRF __div_16_1_00003_arg_b+D'1'
04E1  2124  	CALL __div_16_1_00003
04E2  0820  	MOVF CompTempVarRet140, W
04E3  00F9  	MOVWF CompTempVar702
04E4  1C7A  	BTFSS CompTempVar703,0
04E5  2CE8  	GOTO	label268439998
04E6  09F9  	COMF CompTempVar702, F
04E7  0AF9  	INCF CompTempVar702, F
04E8        label268439998
04E8  0879  	MOVF CompTempVar702, W
04E9  00F4  	MOVWF FCD_LCDDis_0002C_1_tmp_byte

			LCD_3212964_RawSend('0' + tmp_byte, 0x10);
04EA  3E30  	ADDLW 0x30
04EB  00F5  	MOVWF LCD_321296_00026_arg_nIn
04EC  3010  	MOVLW 0x10
04ED  00F6  	MOVWF LCD_321296_00026_arg_nMask
04EE  2145  	CALL LCD_321296_00026


			while (tmp_byte > 0)
04EF        label268440005
04EF  0874  	MOVF FCD_LCDDis_0002C_1_tmp_byte, W
04F0  3C00  	SUBLW 0x00
04F1  1803  	BTFSC STATUS,C
04F2  2CFC  	GOTO	label268440006
04FB  2CEF  	GOTO	label268440005
04FC        label268440006

			{
				tmp_int = tmp_int - 10;
04F3  300A  	MOVLW 0x0A
04F4  0272  	SUBWF FCD_LCDDis_0002C_1_tmp_int, W
04F5  00F5  	MOVWF CompTempVar704
04F6  1C03  	BTFSS STATUS,C
04F7  03F3  	DECF FCD_LCDDis_0002C_1_tmp_int+D'1', F
04F8  0875  	MOVF CompTempVar704, W
04F9  00F2  	MOVWF FCD_LCDDis_0002C_1_tmp_int

				tmp_byte--;
04FA  03F4  	DECF FCD_LCDDis_0002C_1_tmp_byte, F

			}
		}
		LCD_3212964_RawSend('0' + tmp_int, 0x10);
04FC  0872  	MOVF FCD_LCDDis_0002C_1_tmp_int, W
04FD  3E30  	ADDLW 0x30
04FE  00F5  	MOVWF LCD_321296_00026_arg_nIn
04FF  3010  	MOVLW 0x10
0500  00F6  	MOVWF LCD_321296_00026_arg_nMask
0501  2145  	CALL LCD_321296_00026


}
0502  0008  	RETURN


void FCD_LCDDisplay0_PrintString(char* String, char MSZ_String)
{
	
		char idx;
		for (idx=0; idx<MSZ_String; idx++)
		{
			if (String[idx]==0)
			{
				break;
			}
			LCD_3212964_RawSend(String[idx], 0x10);
		}

}



//Bluetooth0: //Macro implementations


void FCD_Bluetooth0_GetDefines()
{
	
	}  //Dummy end of function to allow defines to be added correctly

	////////////////////////////////////////////////////
	// MX_DEFINES
	////////////////////////////////////////////////////
	#if (1 == 1)
	  #define BLU_232_HARDWARE   1
	#endif

	#define BLU_232_RTS          5
	#define BLU_232_CTS          4
	#define BLU232_BAUD          31
	//Real baud = 9600
	//Error = 0%
	#define BLU_SCRIPT_COUNT     4

	#if (4 >= 1)
	  const char* BLU_SCRIPT_1 = "\r";
0937  300D  	MOVLW 0x0D
0938  1283  	BCF STATUS, RP0
0939  1303  	BCF STATUS, RP1
093A  00D3  	MOVWF CompGblVar16
093B  01D4  	CLRF CompGblVar16+D'1'
093C  3000  	MOVLW HIGH(CompGblVar16+D'0')
093D  00E6  	MOVWF CompGblVar17
093E  3053  	MOVLW LOW(CompGblVar16+D'0')
093F  00D1  	MOVWF gbl_BLU_SCRIPT_1
0940  0866  	MOVF CompGblVar17, W
0941  00D2  	MOVWF gbl_BLU_SCRIPT_1+D'1'

	#endif
	#if (4 >= 2)
	  const char* BLU_SCRIPT_2 = "\r";
0942  300D  	MOVLW 0x0D
0943  00D7  	MOVWF CompGblVar18
0944  01D8  	CLRF CompGblVar18+D'1'
0945  3000  	MOVLW HIGH(CompGblVar18+D'0')
0946  00E7  	MOVWF CompGblVar19
0947  3057  	MOVLW LOW(CompGblVar18+D'0')
0948  00D5  	MOVWF gbl_BLU_SCRIPT_2
0949  0867  	MOVF CompGblVar19, W
094A  00D6  	MOVWF gbl_BLU_SCRIPT_2+D'1'

	#endif
	#if (4 >= 3)
	  const char* BLU_SCRIPT_3 = "\r";
094B  300D  	MOVLW 0x0D
094C  00DB  	MOVWF CompGblVar20
094D  01DC  	CLRF CompGblVar20+D'1'
094E  3000  	MOVLW HIGH(CompGblVar20+D'0')
094F  00E8  	MOVWF CompGblVar21
0950  305B  	MOVLW LOW(CompGblVar20+D'0')
0951  00D9  	MOVWF gbl_BLU_SCRIPT_3
0952  0868  	MOVF CompGblVar21, W
0953  00DA  	MOVWF gbl_BLU_SCRIPT_3+D'1'

	#endif
	#if (4 >= 4)
	  const char* BLU_SCRIPT_4 = "\r";
0954  300D  	MOVLW 0x0D
0955  00DF  	MOVWF CompGblVar22
0956  01E0  	CLRF CompGblVar22+D'1'
0957  3000  	MOVLW HIGH(CompGblVar22+D'0')
0958  00E9  	MOVWF CompGblVar23
0959  305F  	MOVLW LOW(CompGblVar22+D'0')
095A  00DD  	MOVWF gbl_BLU_SCRIPT_4
095B  0869  	MOVF CompGblVar23, W
095C  00DE  	MOVWF gbl_BLU_SCRIPT_4+D'1'

	#endif


	//This section details the static defines, prototypes
	//and functions.

	//#define MX_DEBUG_BLU

	#ifdef MX_UART_B
	  #define MX_UART_PORT portb
	  #define MX_UART_TRIS trisb
	#endif
	#ifdef MX_UART_C
	  #define MX_UART_PORT portc
	  #define MX_UART_TRIS trisc
	#endif

	//examples of PIC baud rate settings
	//
	// BAUD = OSC / [64 * (X+1)]
	//
	// so for BLU232_BAUD=31, BAUD = 19660800 / [64 * 32] = 9600
	//
	// rearranging gives X = [OSC / (64*BAUD)] - 1
	//
	// from which we can compile the following table (for 19.6608MHz crystals):
	//
	//  BAUD     |  BLU232_BAUD
	// ----------+--------------
	//      1200 |    255
	//      2400 |    127
	//      4800 |     63
	//      9600 |     31
	//     19200 |     15
	//     28800 |    n/a
	//     38400 |      7
	//     57600 |    n/a
	//    115200 |    n/a
	//
	// BUT REMEMBER: the blu2i module is set to communicate at
	// 9600 BAUD by default, so we will (probably) only be able
	// to access it at this BAUD rate - at least initially.
	// Therefore, we probably shouldn't allow users to change
	// the actual BAUD rate. Although they will be able to use
	// other crystals, so the BAUD rate setting should be
	// calculated by their selected crystal setting.

	#define BLU_STRING_ARRAY_SIZE 32
	//see "at info.txt" for discussion about the string array
	//size and why we have settled on 32.
	#define BLU_STRING_RESPONSE_SIZE 14

	#define BLU_RESPONSE_OK           1
	#define BLU_RESPONSE_ERROR        2
	#define BLU_RESPONSE_CONNECT      3
	#define BLU_RESPONSE_NOCARRIER    4
	#define BLU_RESPONSE_AUDIO        5
	#define BLU_RESPONSE_PAIR         6
	#define BLU_RESPONSE_RING         7

	#define BLU_CHAR_CR              13
	#define BLU_CHAR_LF              10

	#define RS_STATUS_OK              0
	#define RS_STATUS_TIMEOUT         1
	#define RS_STATUS_LOOP            2
	#define RS_STATUS_FERR            3
	#define RS_STATUS_OERR            4

	//Timeout within the <Blu_Read_BLU232_Byte> function
	#define BLU_READ_DELAY           44

	//Timeout within the <BT_Send_Command> function
	#define BLU_SENDCMD_TIMEOUT     100

	//Timeout within the <BT_Wait_For_Response> function
	#define BLU_RESPONSE_TIMEOUT     50

	//Timeout within the <BT_String_Receive> function
	#define BLU_STRINGRX_TIMEOUT     10

	//Timeout within the <BT_Send_Script> function
	#define BLU_SENDSCRIPT_TIMEOUT   10

	//common globals
	char BLU_STRING_ARRAY_TXPTR;
	char BLU_STRING_ARRAY_RXPTR;
	char BLU_STRING_ARRAY[BLU_STRING_ARRAY_SIZE];
	char BLU_RESPONSE_ARRAY[BLU_STRING_RESPONSE_SIZE];

	char BLU_TXIF_MASK;
	char BLU_RCIF_MASK;
	char BLU_RX_STATUS;

	char BLU232_TIMEOUT;


	//prototypes
	char Blu_MaskFromBit(char mybit);
	void Blu_Send_BLU232_Byte(char byte);
	char Blu_Read_BLU232_Byte(char timeout);

	//implementations
	char Blu_MaskFromBit(char mybit)

	{
	    char retVal = 0;
0055  1683  	BSF STATUS, RP0
0056  1303  	BCF STATUS, RP1
0057  01A0  	CLRF Blu_MaskFr_00030_1_retVal

	    switch (mybit)
0076  288E  	GOTO	label268440512
008E        label268440512

	    {
	        case 0:
0058  08FE  	MOVF Blu_MaskFr_00030_arg_mybit, F
0059  1903  	BTFSC STATUS,Z
005A  2877  	GOTO	label268440497
0077        label268440497

	            retVal = 0x01;
0077  3001  	MOVLW 0x01
0078  00A0  	MOVWF Blu_MaskFr_00030_1_retVal

	            break;
0079  288E  	GOTO	label268440512


	        case 1:
005B  037E  	DECF Blu_MaskFr_00030_arg_mybit, W
005C  1903  	BTFSC STATUS,Z
005D  287A  	GOTO	label268440499
007A        label268440499

	            retVal = 0x02;
007A  3002  	MOVLW 0x02
007B  00A0  	MOVWF Blu_MaskFr_00030_1_retVal

	            break;
007C  288E  	GOTO	label268440512


	        case 2:
005E  087E  	MOVF Blu_MaskFr_00030_arg_mybit, W
005F  3A02  	XORLW 0x02
0060  1903  	BTFSC STATUS,Z
0061  287D  	GOTO	label268440501
007D        label268440501

	            retVal = 0x04;
007D  3004  	MOVLW 0x04
007E  00A0  	MOVWF Blu_MaskFr_00030_1_retVal

	            break;
007F  288E  	GOTO	label268440512


	        case 3:
0062  087E  	MOVF Blu_MaskFr_00030_arg_mybit, W
0063  3A03  	XORLW 0x03
0064  1903  	BTFSC STATUS,Z
0065  2880  	GOTO	label268440503
0080        label268440503

	            retVal = 0x08;
0080  3008  	MOVLW 0x08
0081  00A0  	MOVWF Blu_MaskFr_00030_1_retVal

	            break;
0082  288E  	GOTO	label268440512


	        case 4:
0066  087E  	MOVF Blu_MaskFr_00030_arg_mybit, W
0067  3A04  	XORLW 0x04
0068  1903  	BTFSC STATUS,Z
0069  2883  	GOTO	label268440505
0083        label268440505

	            retVal = 0x10;
0083  3010  	MOVLW 0x10
0084  00A0  	MOVWF Blu_MaskFr_00030_1_retVal

	            break;
0085  288E  	GOTO	label268440512


	        case 5:
006A  087E  	MOVF Blu_MaskFr_00030_arg_mybit, W
006B  3A05  	XORLW 0x05
006C  1903  	BTFSC STATUS,Z
006D  2886  	GOTO	label268440507
0086        label268440507

	            retVal = 0x20;
0086  3020  	MOVLW 0x20
0087  00A0  	MOVWF Blu_MaskFr_00030_1_retVal

	            break;
0088  288E  	GOTO	label268440512


	        case 6:
006E  087E  	MOVF Blu_MaskFr_00030_arg_mybit, W
006F  3A06  	XORLW 0x06
0070  1903  	BTFSC STATUS,Z
0071  2889  	GOTO	label268440509
0089        label268440509

	            retVal = 0x40;
0089  3040  	MOVLW 0x40
008A  00A0  	MOVWF Blu_MaskFr_00030_1_retVal

	            break;
008B  288E  	GOTO	label268440512


	        case 7:
0072  087E  	MOVF Blu_MaskFr_00030_arg_mybit, W
0073  3A07  	XORLW 0x07
0074  1903  	BTFSC STATUS,Z
0075  288C  	GOTO	label268440511
008C        label268440511

	            retVal = 0x80;
008C  3080  	MOVLW 0x80
008D  00A0  	MOVWF Blu_MaskFr_00030_1_retVal

	            break;
	    }
	    return (retVal);
008E  0820  	MOVF Blu_MaskFr_00030_1_retVal, W
008F  00A1  	MOVWF CompTempVarRet709

	}
0090  0008  	RETURN



	void Blu_Send_BLU232_Byte(char byte)

	{
	    char bNotReady;

	  #ifndef MX_UART
	    #pragma error "The target microcontroller does not have a UART"
	  #endif

	    BLU232_TIMEOUT = 100;
0091  3064  	MOVLW 0x64
0092  1283  	BCF STATUS, RP0
0093  1303  	BCF STATUS, RP1
0094  00EF  	MOVWF gbl_BLU232_TIMEOUT

	    bNotReady = ((pir1 & BLU_TXIF_MASK) == 0);
0095  086C  	MOVF gbl_BLU_TXIF_MASK, W
0096  050C  	ANDWF gbl_pir1, W
0097  00F6  	MOVWF CompTempVar710
0098  01F5  	CLRF Blu_Send_B_00031_1_bNotReady
0099  0AF5  	INCF Blu_Send_B_00031_1_bNotReady, F
009A  08F6  	MOVF CompTempVar710, F
009B  1D03  	BTFSS STATUS,Z
009C  1075  	BCF Blu_Send_B_00031_1_bNotReady,0
009D        label4026533150

	    while (bNotReady)
009D  08F5  	MOVF Blu_Send_B_00031_1_bNotReady, F
009E  1903  	BTFSC STATUS,Z
009F  28AF  	GOTO	label268440531
00AE  289D  	GOTO	label4026533150
00AF        label268440531

	    {
	        bNotReady = ((pir1 & BLU_TXIF_MASK) == 0);
00A0  086C  	MOVF gbl_BLU_TXIF_MASK, W
00A1  050C  	ANDWF gbl_pir1, W
00A2  00F6  	MOVWF CompTempVar712
00A3  01F7  	CLRF CompTempVar713
00A4  0AF7  	INCF CompTempVar713, F
00A5  08F6  	MOVF CompTempVar712, F
00A6  1D03  	BTFSS STATUS,Z
00A7  1077  	BCF CompTempVar713,0
00A8  0877  	MOVF CompTempVar713, W
00A9  00F5  	MOVWF Blu_Send_B_00031_1_bNotReady

	        BLU232_TIMEOUT--;
00AA  03EF  	DECF gbl_BLU232_TIMEOUT, F

	        if (BLU232_TIMEOUT == 0)
00AB  08EF  	MOVF gbl_BLU232_TIMEOUT, F
00AC  1903  	BTFSC STATUS,Z

	        {
	            return;
	        }
	    }


	  #ifdef BLU_232_HARDWARE
	    //wait until CTS is high
	    BLU232_TIMEOUT = 100;
00AF  3064  	MOVLW 0x64
00B0  00EF  	MOVWF gbl_BLU232_TIMEOUT

	    bNotReady = ((MX_UART_PORT & (1 << BLU_232_CTS)) != 0);
00B1  3010  	MOVLW 0x10
00B2  0507  	ANDWF gbl_portc, W
00B3  00F6  	MOVWF CompTempVar714
00B4  01F7  	CLRF CompTempVar715
00B5  08F6  	MOVF CompTempVar714, F
00B6  1D03  	BTFSS STATUS,Z
00B7  1477  	BSF CompTempVar715,0
00B8  0877  	MOVF CompTempVar715, W
00B9  00F5  	MOVWF Blu_Send_B_00031_1_bNotReady

	    while (bNotReady)
00BA        label268440548
00BA  08F5  	MOVF Blu_Send_B_00031_1_bNotReady, F
00BB  1903  	BTFSC STATUS,Z
00BC  28CB  	GOTO	label268440549
00CA  28BA  	GOTO	label268440548
00CB        label268440549

	    {
	        bNotReady = ((MX_UART_PORT & (1 << BLU_232_CTS)) != 0);
00BD  3010  	MOVLW 0x10
00BE  0507  	ANDWF gbl_portc, W
00BF  00F6  	MOVWF CompTempVar716
00C0  01F7  	CLRF CompTempVar717
00C1  08F6  	MOVF CompTempVar716, F
00C2  1D03  	BTFSS STATUS,Z
00C3  1477  	BSF CompTempVar717,0
00C4  0877  	MOVF CompTempVar717, W
00C5  00F5  	MOVWF Blu_Send_B_00031_1_bNotReady

	        BLU232_TIMEOUT--;
00C6  03EF  	DECF gbl_BLU232_TIMEOUT, F

	        if (BLU232_TIMEOUT == 0)
00C7  08EF  	MOVF gbl_BLU232_TIMEOUT, F
00C8  1903  	BTFSC STATUS,Z

	        {
	            return;
	        }
	    }
	  #endif

	    txreg = byte;
00CB  0874  	MOVF Blu_Send_B_00031_arg_byte, W
00CC  0099  	MOVWF gbl_txreg


	}
00AD  0008  	RETURN
00C9  0008  	RETURN
00CD  0008  	RETURN



	char Blu_Read_BLU232_Byte(char timeout)

	{
	    //NOTE: this function should timeout after <timeout x 100> microseconds
	    char reg_mask;
	    char delay1 = BLU_READ_DELAY;
00CE  302C  	MOVLW 0x2C
00CF  00FA  	MOVWF Blu_Read_B_00032_1_delay1

	    //char delay2 = 0;
	    char dummy = 0;
00D0  01FB  	CLRF Blu_Read_B_00032_1_dummy

	    char retVal = 255;
00D1  30FF  	MOVLW 0xFF
00D2  00FC  	MOVWF Blu_Read_B_00032_1_retVal

	    char bWaitForever = 0;
00D3  01FD  	CLRF Blu_Read_B_00032_1_bWaitForever


	  #ifndef MX_UART
	    #pragma error "The target microcontroller does not have a UART"
	  #endif

	    BLU_RX_STATUS = RS_STATUS_LOOP;
00D4  3002  	MOVLW 0x02
00D5  1283  	BCF STATUS, RP0
00D6  1303  	BCF STATUS, RP1
00D7  00EE  	MOVWF gbl_BLU_RX_STATUS


	  #ifdef BLU_232_HARDWARE
	    clear_bit(MX_UART_PORT, BLU_232_RTS);        //ready to accept data
00D8  1287  	BCF gbl_portc,5

	  #endif

	    if (timeout == 0xFF)
00D9  0A78  	INCF Blu_Read_B_00032_arg_timeout, W
00DA  1D03  	BTFSS STATUS,Z
00DB  28DE  	GOTO	label268440569
00DE        label268440569

	    {
	        bWaitForever = 1;
00DC  3001  	MOVLW 0x01
00DD  00FD  	MOVWF Blu_Read_B_00032_1_bWaitForever

	    }

	    while (BLU_RX_STATUS == RS_STATUS_LOOP)
00DE  086E  	MOVF gbl_BLU_RX_STATUS, W
00DF  3A02  	XORLW 0x02
00E0  1D03  	BTFSS STATUS,Z
00E1  28FB  	GOTO	label268440574
00FA  28DE  	GOTO	label268440569
00FB        label268440574

	    {

	        if ((pir1 & BLU_RCIF_MASK) != 0)
00E2  086D  	MOVF gbl_BLU_RCIF_MASK, W
00E3  050C  	ANDWF gbl_pir1, W
00E4  1903  	BTFSC STATUS,Z
00E5  28E8  	GOTO	label268440577
00E8        label268440577

	        {
	            //received a byte
	            BLU_RX_STATUS = RS_STATUS_OK;
00E6  01EE  	CLRF gbl_BLU_RX_STATUS


	        } else {
00E7  28DE  	GOTO	label268440569

	            if (bWaitForever == 0)
00E8  08FD  	MOVF Blu_Read_B_00032_1_bWaitForever, F
00E9  1D03  	BTFSS STATUS,Z
00EA  28DE  	GOTO	label268440569

	            {
	                //don't wait forever, so do timeout thing...
	                if (timeout == 0)
00EB  08F8  	MOVF Blu_Read_B_00032_arg_timeout, F
00EC  1D03  	BTFSS STATUS,Z
00ED  28F3  	GOTO	label268440586
00F3        label268440586

	                {
	                    BLU_RX_STATUS = RS_STATUS_TIMEOUT;
00EE  3001  	MOVLW 0x01
00EF  00EE  	MOVWF gbl_BLU_RX_STATUS

	                    retVal = 255;
00F0  30FF  	MOVLW 0xFF
00F1  00FC  	MOVWF Blu_Read_B_00032_1_retVal


	                } else {
00F2  28DE  	GOTO	label268440569

	                    //decrement timeout
	                    delay1--;
00F3  03FA  	DECF Blu_Read_B_00032_1_delay1, F

	                    if (delay1 == 0)
00F4  08FA  	MOVF Blu_Read_B_00032_1_delay1, F
00F5  1D03  	BTFSS STATUS,Z
00F6  28DE  	GOTO	label268440569

	                    {
	                        //delay2--;
	                        //if (delay2 == 0)
	                        //{
	                            timeout--;
00F7  03F8  	DECF Blu_Read_B_00032_arg_timeout, F

	                        //}
	                        delay1 = BLU_READ_DELAY;
00F8  302C  	MOVLW 0x2C
00F9  00FA  	MOVWF Blu_Read_B_00032_1_delay1

	                    }
	                }
	            }
	        }
	    }

	    if (BLU_RX_STATUS == RS_STATUS_OK)
00FB  08EE  	MOVF gbl_BLU_RX_STATUS, F
00FC  1D03  	BTFSS STATUS,Z
00FD  2920  	GOTO	label268440626

	    {
	        reg_mask = Blu_MaskFromBit(FERR);
00FE  3002  	MOVLW 0x02
00FF  00FE  	MOVWF Blu_MaskFr_00030_arg_mybit
0100  2055  	CALL Blu_MaskFr_00030
0101  0821  	MOVF CompTempVarRet709, W
0102  00F9  	MOVWF Blu_Read_B_00032_1_reg_mask

	        if ((rcsta & reg_mask) != 0)
0103  1283  	BCF STATUS, RP0
0104  0518  	ANDWF gbl_rcsta, W
0105  1903  	BTFSC STATUS,Z
0106  290E  	GOTO	label268440606
010E        label268440606

	        {
	            retVal = rcreg;                        //need to read the rcreg to clear FERR
0107  081A  	MOVF gbl_rcreg, W
0108  00FC  	MOVWF Blu_Read_B_00032_1_retVal

	            BLU_RX_STATUS = RS_STATUS_FERR;
0109  3003  	MOVLW 0x03
010A  00EE  	MOVWF gbl_BLU_RX_STATUS


	            #ifdef MX_DEBUG_BLU
	                FCD_LCDDisplay0_PrintASCII('f');
	                FCD_LCDDisplay0_PrintNumber(retVal);
	            #endif

	            //need to reset CREN
	            clear_bit(rcsta, CREN);
010B  1218  	BCF gbl_rcsta,4

	            set_bit(rcsta, CREN);
010C  1618  	BSF gbl_rcsta,4


	        } else {
010D  2920  	GOTO	label268440626

	            reg_mask = Blu_MaskFromBit(OERR);
010E  3001  	MOVLW 0x01
010F  00FE  	MOVWF Blu_MaskFr_00030_arg_mybit
0110  2055  	CALL Blu_MaskFr_00030
0111  0821  	MOVF CompTempVarRet709, W
0112  00F9  	MOVWF Blu_Read_B_00032_1_reg_mask

	            if ((rcsta & reg_mask) != 0)
0113  1283  	BCF STATUS, RP0
0114  0518  	ANDWF gbl_rcsta, W
0115  1903  	BTFSC STATUS,Z
0116  291E  	GOTO	label268440619
011E        label268440619

	            {
	                BLU_RX_STATUS = RS_STATUS_OERR;
0117  3004  	MOVLW 0x04
0118  00EE  	MOVWF gbl_BLU_RX_STATUS


	                retVal = rcreg;
0119  081A  	MOVF gbl_rcreg, W
011A  00FC  	MOVWF Blu_Read_B_00032_1_retVal


	                #ifdef MX_DEBUG_BLU
	                  FCD_LCDDisplay0_PrintASCII('o');
	                  FCD_LCDDisplay0_PrintNumber(retVal);
	                #endif

	                //need to reset CREN
	                clear_bit(rcsta, CREN);
011B  1218  	BCF gbl_rcsta,4

	                set_bit(rcsta, CREN);
011C  1618  	BSF gbl_rcsta,4


	            } else {
011D  2920  	GOTO	label268440626
0120        label268440626

	                retVal = rcreg; //no error, so rx byte is valid
011E  081A  	MOVF gbl_rcreg, W
011F  00FC  	MOVWF Blu_Read_B_00032_1_retVal


	              #ifdef BLU232_ECHO
	                Blu_Send_BLU232_Byte(retVal);
	              #endif
	            }
	        }
	    }

	  #ifdef BLU_232_HARDWARE
	    set_bit(MX_UART_PORT, BLU_232_RTS);        //not ready to accept data
0120  1687  	BSF gbl_portc,5

	  #endif

	    return (retVal);
0121  087C  	MOVF Blu_Read_B_00032_1_retVal, W
0122  00FE  	MOVWF CompTempVarRet718

	}
0123  0008  	RETURN




	// Dummy function to close the defines section off
	void CUSTOM_Dummy_Function();
	void CUSTOM_Dummy_Function()
	{

}

void FCD_Bluetooth0_Initialize()

{
	    BLU_STRING_ARRAY_TXPTR = 0;
05B3  1283  	BCF STATUS, RP0
05B4  1303  	BCF STATUS, RP1
05B5  01EA  	CLRF gbl_BLU_STRING_ARRAY_TXPTR

	    BLU_STRING_ARRAY_RXPTR = 0;
05B6  01EB  	CLRF gbl_BLU_STRING_ARRAY_RXPTR


	    #ifndef MX_UART
	        #pragma error "The target microcontroller does not have a UART"
	    #endif

	    #ifdef BLU_232_HARDWARE
	        #if(BLU_232_RTS == MX_UART_TX)
	              asm error "RTS is set to TX pin"
	        #endif
	        #if(BLU_232_CTS == MX_UART_TX)
	              asm error "CTS is set to TX pin"
	        #endif
	        #if(BLU_232_RTS == MX_UART_RX)
	              asm error "RTS is set to RX pin"
	        #endif
	        #if(BLU_232_CTS == MX_UART_RX)
	              asm error "CTS is set to RX pin"
	        #endif
	    #endif

	    //set UART initial states
	    MX_UART_TRIS = 0xFF;
05B7  30FF  	MOVLW 0xFF
05B8  1683  	BSF STATUS, RP0
05B9  0087  	MOVWF gbl_trisc

	    //set_bit(MX_UART_TRIS, MX_UART_RX);
	    clear_bit(MX_UART_TRIS, MX_UART_TX);
05BA  1307  	BCF gbl_trisc,6


	    #ifdef BLU_232_HARDWARE
	    //set_bit(MX_UART_TRIS, BLU_232_CTS);        //CTS is an input
	    clear_bit(MX_UART_TRIS, BLU_232_RTS);        //RTS is an output
05BB  1287  	BCF gbl_trisc,5

	    set_bit(MX_UART_PORT, BLU_232_RTS);          //not ready to accept data
05BC  1283  	BCF STATUS, RP0
05BD  1687  	BSF gbl_portc,5

	    #endif

	    txsta = 0;                // 8-bit, async, low speed, off
05BE  1683  	BSF STATUS, RP0
05BF  0198  	CLRF gbl_txsta

	    spbrg = BLU232_BAUD;      // set the baud rate
05C0  301F  	MOVLW 0x1F
05C1  0099  	MOVWF gbl_spbrg

	    rcsta = 0;                // 8-bit, disabled
05C2  1283  	BCF STATUS, RP0
05C3  0198  	CLRF gbl_rcsta

	    set_bit(rcsta, SPEN);     // turn on serial interface
05C4  1798  	BSF gbl_rcsta,7

	    set_bit(txsta, TXEN);
05C5  1683  	BSF STATUS, RP0
05C6  1698  	BSF gbl_txsta,5

	    set_bit(rcsta, CREN);
05C7  1283  	BCF STATUS, RP0
05C8  1618  	BSF gbl_rcsta,4


	    BLU_TXIF_MASK = Blu_MaskFromBit(TXIF);
05C9  3004  	MOVLW 0x04
05CA  00FE  	MOVWF Blu_MaskFr_00030_arg_mybit
05CB  2055  	CALL Blu_MaskFr_00030
05CC  0821  	MOVF CompTempVarRet709, W
05CD  1283  	BCF STATUS, RP0
05CE  00EC  	MOVWF gbl_BLU_TXIF_MASK

	    BLU_RCIF_MASK = Blu_MaskFromBit(RCIF);
05CF  3005  	MOVLW 0x05
05D0  00FE  	MOVWF Blu_MaskFr_00030_arg_mybit
05D1  2055  	CALL Blu_MaskFr_00030
05D2  0821  	MOVF CompTempVarRet709, W
05D3  1283  	BCF STATUS, RP0
05D4  00ED  	MOVWF gbl_BLU_RCIF_MASK

}
05D5  0008  	RETURN


char FCD_Bluetooth0_CreateCommand(char ch)

{
	    if (BLU_STRING_ARRAY_TXPTR < BLU_STRING_ARRAY_SIZE)
03C3  3020  	MOVLW 0x20
03C4  1283  	BCF STATUS, RP0
03C5  1303  	BCF STATUS, RP1
03C6  026A  	SUBWF gbl_BLU_STRING_ARRAY_TXPTR, W
03C7  1803  	BTFSC STATUS,C
03C8  2BD4  	GOTO	label268440071
03D4        label268440071

	    {
	        BLU_STRING_ARRAY[BLU_STRING_ARRAY_TXPTR] = ch;
03C9  1383  	BCF	STATUS,IRP
03CA  3020  	MOVLW LOW(gbl_BLU_STRING_ARRAY+D'0')
03CB  0084  	MOVWF FSR
03CC  086A  	MOVF gbl_BLU_STRING_ARRAY_TXPTR, W
03CD  0784  	ADDWF FSR, F
03CE  0870  	MOVF FCD_Blueto_00020_arg_ch, W
03CF  0080  	MOVWF INDF

	        BLU_STRING_ARRAY_TXPTR++;
03D0  0AEA  	INCF gbl_BLU_STRING_ARRAY_TXPTR, F

	        return(1);
03D1  3001  	MOVLW 0x01
03D2  00F1  	MOVWF CompTempVarRet629

	    }
	    else
	    {
	        return(0);
03D4  01F1  	CLRF CompTempVarRet629

	    }
}
03D3  0008  	RETURN
03D5  0008  	RETURN


char FCD_Bluetooth0_SendCommand(char bExpectEcho, char bSendCR)

{
	    char idx = 0;
0392  01F2  	CLRF FCD_Blueto_00021_1_idx

	    char dummy;
	    if (BLU_STRING_ARRAY_TXPTR > 0)
0393  1283  	BCF STATUS, RP0
0394  1303  	BCF STATUS, RP1
0395  086A  	MOVF gbl_BLU_STRING_ARRAY_TXPTR, W
0396  3C00  	SUBLW 0x00
0397  1803  	BTFSC STATUS,C
0398  2BC1  	GOTO	label268440086
0399        label4026533198
03C1        label268440086

	    {
	        while (idx < BLU_STRING_ARRAY_TXPTR)
0399  086A  	MOVF gbl_BLU_STRING_ARRAY_TXPTR, W
039A  0272  	SUBWF FCD_Blueto_00021_1_idx, W
039B  1803  	BTFSC STATUS,C
039C  2BAF  	GOTO	label268440090
03AE  2B99  	GOTO	label4026533198
03AF        label268440090

	        {
	            Blu_Send_BLU232_Byte(BLU_STRING_ARRAY[idx]);
039D  1383  	BCF	STATUS,IRP
039E  3020  	MOVLW LOW(gbl_BLU_STRING_ARRAY+D'0')
039F  0084  	MOVWF FSR
03A0  0872  	MOVF FCD_Blueto_00021_1_idx, W
03A1  0784  	ADDWF FSR, F
03A2  0800  	MOVF INDF, W
03A3  00F4  	MOVWF Blu_Send_B_00031_arg_byte
03A4  2091  	CALL Blu_Send_B_00031

	            //delay_ms(1);

	            if (bExpectEcho != 0)
03A5  08F0  	MOVF FCD_Blueto_00021_arg_bExpectEcho, F
03A6  1903  	BTFSC STATUS,Z
03A7  2BAD  	GOTO	label268440100
03AD        label268440100

	            {
	                //read echoed character
	                dummy = Blu_Read_BLU232_Byte(BLU_SENDCMD_TIMEOUT);  //10ms timeout???
03A8  3064  	MOVLW 0x64
03A9  00F8  	MOVWF Blu_Read_B_00032_arg_timeout
03AA  20CE  	CALL Blu_Read_B_00032
03AB  087E  	MOVF CompTempVarRet718, W
03AC  00F3  	MOVWF FCD_Blueto_00021_1_dummy

	            }

	            idx++;
03AD  0AF2  	INCF FCD_Blueto_00021_1_idx, F

	            //delay_ms(2);
	        }

	        if (bSendCR != 0)
03AF  08F1  	MOVF FCD_Blueto_00021_arg_bSendCR, F
03B0  1903  	BTFSC STATUS,Z
03B1  2BBD  	GOTO	label268440117

	        {
	            Blu_Send_BLU232_Byte(0x0D);            //send the terminating CR
03B2  300D  	MOVLW 0x0D
03B3  00F4  	MOVWF Blu_Send_B_00031_arg_byte
03B4  2091  	CALL Blu_Send_B_00031

	            //delay_ms(1);

	            if (bExpectEcho != 0)
03B5  08F0  	MOVF FCD_Blueto_00021_arg_bExpectEcho, F
03B6  1903  	BTFSC STATUS,Z
03B7  2BBD  	GOTO	label268440117
03BD        label268440117

	            {
	                //read echoed character
	                dummy = Blu_Read_BLU232_Byte(BLU_SENDCMD_TIMEOUT);  //10ms timeout???
03B8  3064  	MOVLW 0x64
03B9  00F8  	MOVWF Blu_Read_B_00032_arg_timeout
03BA  20CE  	CALL Blu_Read_B_00032
03BB  087E  	MOVF CompTempVarRet718, W
03BC  00F3  	MOVWF FCD_Blueto_00021_1_dummy

	            }
	        }

	        BLU_STRING_ARRAY_TXPTR = 0;
03BD  01EA  	CLRF gbl_BLU_STRING_ARRAY_TXPTR

	        return (1);
03BE  3001  	MOVLW 0x01
03BF  00F4  	MOVWF CompTempVarRet631

	    }
	    else
	    {
	        return (0);
03C1  01F4  	CLRF CompTempVarRet631

	    }
}
03C0  0008  	RETURN
03C2  0008  	RETURN


char FCD_Bluetooth0_WaitForResponse(char response_code, char timeout)

{
	    //returns zero for OK
	    //returns 0xFF for timeout or an illegal response code
	    //returns the number of characters received if an unexpected response is received
	    char resp_size = 0;
0191  01F2  	CLRF FCD_Blueto_00022_1_resp_size

	    char ch;
	    char rx_ptr;
	    char crlf_flags = 0;
0192  01F5  	CLRF FCD_Blueto_00022_1_crlf_flags

	    char unexpected = 0;
0193  01F6  	CLRF FCD_Blueto_00022_1_unexpected

	    //responses always start with a <cr><lf> combination
	    BLU_RESPONSE_ARRAY[resp_size++] = BLU_CHAR_CR;
0194  1283  	BCF STATUS, RP0
0195  1303  	BCF STATUS, RP1
0196  1383  	BCF	STATUS,IRP
0197  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0198  0084  	MOVWF FSR
0199  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
019A  0784  	ADDWF FSR, F
019B  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
019C  300D  	MOVLW 0x0D
019D  0080  	MOVWF INDF

	    BLU_RESPONSE_ARRAY[resp_size++] = BLU_CHAR_LF;
019E  1383  	BCF	STATUS,IRP
019F  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
01A0  0084  	MOVWF FSR
01A1  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
01A2  0784  	ADDWF FSR, F
01A3  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
01A4  300A  	MOVLW 0x0A
01A5  0080  	MOVWF INDF


	    switch (response_code)
033C        label268440164

	    {
	        case BLU_RESPONSE_OK:
01A6  0370  	DECF FCD_Blueto_00022_arg_respo_00023, W
01A7  1903  	BTFSC STATUS,Z
01A8  29C2  	GOTO	label268440142
01C2        label268440142

	            BLU_RESPONSE_ARRAY[resp_size++] = 'O';
01C2  1383  	BCF	STATUS,IRP
01C3  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
01C4  0084  	MOVWF FSR
01C5  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
01C6  0784  	ADDWF FSR, F
01C7  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
01C8  304F  	MOVLW 0x4F
01C9  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'K';
01CA  1383  	BCF	STATUS,IRP
01CB  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
01CC  0084  	MOVWF FSR
01CD  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
01CE  0784  	ADDWF FSR, F
01CF  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
01D0  304B  	MOVLW 0x4B
01D1  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = BLU_CHAR_CR;
01D2  1383  	BCF	STATUS,IRP
01D3  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
01D4  0084  	MOVWF FSR
01D5  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
01D6  0784  	ADDWF FSR, F
01D7  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
01D8  300D  	MOVLW 0x0D
01D9  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = BLU_CHAR_LF;
01DA  1383  	BCF	STATUS,IRP
01DB  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
01DC  0084  	MOVWF FSR
01DD  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
01DE  0784  	ADDWF FSR, F
01DF  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
01E0  300A  	MOVLW 0x0A
01E1  0080  	MOVWF INDF

	            break;
01E2  2B3C  	GOTO	label268440164


	        case BLU_RESPONSE_ERROR:
01A9  0870  	MOVF FCD_Blueto_00022_arg_respo_00023, W
01AA  3A02  	XORLW 0x02
01AB  1903  	BTFSC STATUS,Z
01AC  29E3  	GOTO	label268440144
01E3        label268440144

	            BLU_RESPONSE_ARRAY[resp_size++] = 'E';
01E3  1383  	BCF	STATUS,IRP
01E4  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
01E5  0084  	MOVWF FSR
01E6  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
01E7  0784  	ADDWF FSR, F
01E8  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
01E9  3045  	MOVLW 0x45
01EA  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'R';
01EB  1383  	BCF	STATUS,IRP
01EC  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
01ED  0084  	MOVWF FSR
01EE  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
01EF  0784  	ADDWF FSR, F
01F0  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
01F1  3052  	MOVLW 0x52
01F2  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'R';
01F3  1383  	BCF	STATUS,IRP
01F4  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
01F5  0084  	MOVWF FSR
01F6  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
01F7  0784  	ADDWF FSR, F
01F8  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
01F9  3052  	MOVLW 0x52
01FA  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'O';
01FB  1383  	BCF	STATUS,IRP
01FC  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
01FD  0084  	MOVWF FSR
01FE  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
01FF  0784  	ADDWF FSR, F
0200  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0201  304F  	MOVLW 0x4F
0202  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'R';
0203  1383  	BCF	STATUS,IRP
0204  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0205  0084  	MOVWF FSR
0206  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0207  0784  	ADDWF FSR, F
0208  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0209  3052  	MOVLW 0x52
020A  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = ' ';
020B  1383  	BCF	STATUS,IRP
020C  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
020D  0084  	MOVWF FSR
020E  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
020F  0784  	ADDWF FSR, F
0210  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0211  3020  	MOVLW 0x20
0212  0080  	MOVWF INDF

	            break;
0213  2B3C  	GOTO	label268440164


	        case BLU_RESPONSE_CONNECT:
01AD  0870  	MOVF FCD_Blueto_00022_arg_respo_00023, W
01AE  3A03  	XORLW 0x03
01AF  1903  	BTFSC STATUS,Z
01B0  2A14  	GOTO	label268440146
0214        label268440146

	            BLU_RESPONSE_ARRAY[resp_size++] = 'C';
0214  1383  	BCF	STATUS,IRP
0215  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0216  0084  	MOVWF FSR
0217  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0218  0784  	ADDWF FSR, F
0219  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
021A  3043  	MOVLW 0x43
021B  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'O';
021C  1383  	BCF	STATUS,IRP
021D  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
021E  0084  	MOVWF FSR
021F  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0220  0784  	ADDWF FSR, F
0221  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0222  304F  	MOVLW 0x4F
0223  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'N';
0224  1383  	BCF	STATUS,IRP
0225  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0226  0084  	MOVWF FSR
0227  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0228  0784  	ADDWF FSR, F
0229  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
022A  304E  	MOVLW 0x4E
022B  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'N';
022C  1383  	BCF	STATUS,IRP
022D  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
022E  0084  	MOVWF FSR
022F  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0230  0784  	ADDWF FSR, F
0231  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0232  304E  	MOVLW 0x4E
0233  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'E';
0234  1383  	BCF	STATUS,IRP
0235  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0236  0084  	MOVWF FSR
0237  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0238  0784  	ADDWF FSR, F
0239  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
023A  3045  	MOVLW 0x45
023B  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'C';
023C  1383  	BCF	STATUS,IRP
023D  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
023E  0084  	MOVWF FSR
023F  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0240  0784  	ADDWF FSR, F
0241  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0242  3043  	MOVLW 0x43
0243  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'T';
0244  1383  	BCF	STATUS,IRP
0245  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0246  0084  	MOVWF FSR
0247  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0248  0784  	ADDWF FSR, F
0249  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
024A  3054  	MOVLW 0x54
024B  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = ' ';
024C  1383  	BCF	STATUS,IRP
024D  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
024E  0084  	MOVWF FSR
024F  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0250  0784  	ADDWF FSR, F
0251  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0252  3020  	MOVLW 0x20
0253  0080  	MOVWF INDF

	            break;
0254  2B3C  	GOTO	label268440164


	        case BLU_RESPONSE_NOCARRIER:
01B1  0870  	MOVF FCD_Blueto_00022_arg_respo_00023, W
01B2  3A04  	XORLW 0x04
01B3  1903  	BTFSC STATUS,Z
01B4  2A55  	GOTO	label268440148
0255        label268440148

	            BLU_RESPONSE_ARRAY[resp_size++] = 'N';
0255  1383  	BCF	STATUS,IRP
0256  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0257  0084  	MOVWF FSR
0258  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0259  0784  	ADDWF FSR, F
025A  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
025B  304E  	MOVLW 0x4E
025C  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'O';
025D  1383  	BCF	STATUS,IRP
025E  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
025F  0084  	MOVWF FSR
0260  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0261  0784  	ADDWF FSR, F
0262  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0263  304F  	MOVLW 0x4F
0264  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = ' ';
0265  1383  	BCF	STATUS,IRP
0266  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0267  0084  	MOVWF FSR
0268  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0269  0784  	ADDWF FSR, F
026A  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
026B  3020  	MOVLW 0x20
026C  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'C';
026D  1383  	BCF	STATUS,IRP
026E  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
026F  0084  	MOVWF FSR
0270  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0271  0784  	ADDWF FSR, F
0272  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0273  3043  	MOVLW 0x43
0274  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'A';
0275  1383  	BCF	STATUS,IRP
0276  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0277  0084  	MOVWF FSR
0278  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0279  0784  	ADDWF FSR, F
027A  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
027B  3041  	MOVLW 0x41
027C  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'R';
027D  1383  	BCF	STATUS,IRP
027E  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
027F  0084  	MOVWF FSR
0280  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0281  0784  	ADDWF FSR, F
0282  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0283  3052  	MOVLW 0x52
0284  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'R';
0285  1383  	BCF	STATUS,IRP
0286  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0287  0084  	MOVWF FSR
0288  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0289  0784  	ADDWF FSR, F
028A  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
028B  3052  	MOVLW 0x52
028C  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'I';
028D  1383  	BCF	STATUS,IRP
028E  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
028F  0084  	MOVWF FSR
0290  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0291  0784  	ADDWF FSR, F
0292  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0293  3049  	MOVLW 0x49
0294  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'E';
0295  1383  	BCF	STATUS,IRP
0296  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0297  0084  	MOVWF FSR
0298  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0299  0784  	ADDWF FSR, F
029A  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
029B  3045  	MOVLW 0x45
029C  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'R';
029D  1383  	BCF	STATUS,IRP
029E  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
029F  0084  	MOVWF FSR
02A0  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02A1  0784  	ADDWF FSR, F
02A2  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02A3  3052  	MOVLW 0x52
02A4  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = BLU_CHAR_CR;
02A5  1383  	BCF	STATUS,IRP
02A6  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02A7  0084  	MOVWF FSR
02A8  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02A9  0784  	ADDWF FSR, F
02AA  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02AB  300D  	MOVLW 0x0D
02AC  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = BLU_CHAR_LF;
02AD  1383  	BCF	STATUS,IRP
02AE  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02AF  0084  	MOVWF FSR
02B0  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02B1  0784  	ADDWF FSR, F
02B2  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02B3  300A  	MOVLW 0x0A
02B4  0080  	MOVWF INDF

	            break;
02B5  2B3C  	GOTO	label268440164


	        case BLU_RESPONSE_AUDIO:
01B5  0870  	MOVF FCD_Blueto_00022_arg_respo_00023, W
01B6  3A05  	XORLW 0x05
01B7  1903  	BTFSC STATUS,Z
01B8  2AB6  	GOTO	label268440150
02B6        label268440150

	            BLU_RESPONSE_ARRAY[resp_size++] = 'A';
02B6  1383  	BCF	STATUS,IRP
02B7  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02B8  0084  	MOVWF FSR
02B9  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02BA  0784  	ADDWF FSR, F
02BB  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02BC  3041  	MOVLW 0x41
02BD  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'U';
02BE  1383  	BCF	STATUS,IRP
02BF  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02C0  0084  	MOVWF FSR
02C1  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02C2  0784  	ADDWF FSR, F
02C3  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02C4  3055  	MOVLW 0x55
02C5  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'D';
02C6  1383  	BCF	STATUS,IRP
02C7  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02C8  0084  	MOVWF FSR
02C9  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02CA  0784  	ADDWF FSR, F
02CB  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02CC  3044  	MOVLW 0x44
02CD  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'I';
02CE  1383  	BCF	STATUS,IRP
02CF  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02D0  0084  	MOVWF FSR
02D1  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02D2  0784  	ADDWF FSR, F
02D3  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02D4  3049  	MOVLW 0x49
02D5  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'O';
02D6  1383  	BCF	STATUS,IRP
02D7  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02D8  0084  	MOVWF FSR
02D9  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02DA  0784  	ADDWF FSR, F
02DB  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02DC  304F  	MOVLW 0x4F
02DD  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = ' ';
02DE  1383  	BCF	STATUS,IRP
02DF  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02E0  0084  	MOVWF FSR
02E1  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02E2  0784  	ADDWF FSR, F
02E3  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02E4  3020  	MOVLW 0x20
02E5  0080  	MOVWF INDF

	            break;
02E6  2B3C  	GOTO	label268440164


	        case BLU_RESPONSE_PAIR:
01B9  0870  	MOVF FCD_Blueto_00022_arg_respo_00023, W
01BA  3A06  	XORLW 0x06
01BB  1903  	BTFSC STATUS,Z
01BC  2AE7  	GOTO	label268440152
02E7        label268440152

	            BLU_RESPONSE_ARRAY[resp_size++] = 'P';
02E7  1383  	BCF	STATUS,IRP
02E8  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02E9  0084  	MOVWF FSR
02EA  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02EB  0784  	ADDWF FSR, F
02EC  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02ED  3050  	MOVLW 0x50
02EE  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'A';
02EF  1383  	BCF	STATUS,IRP
02F0  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02F1  0084  	MOVWF FSR
02F2  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02F3  0784  	ADDWF FSR, F
02F4  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02F5  3041  	MOVLW 0x41
02F6  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'I';
02F7  1383  	BCF	STATUS,IRP
02F8  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
02F9  0084  	MOVWF FSR
02FA  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
02FB  0784  	ADDWF FSR, F
02FC  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
02FD  3049  	MOVLW 0x49
02FE  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'R';
02FF  1383  	BCF	STATUS,IRP
0300  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0301  0084  	MOVWF FSR
0302  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0303  0784  	ADDWF FSR, F
0304  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0305  3052  	MOVLW 0x52
0306  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = ' ';
0307  1383  	BCF	STATUS,IRP
0308  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0309  0084  	MOVWF FSR
030A  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
030B  0784  	ADDWF FSR, F
030C  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
030D  3020  	MOVLW 0x20
030E  0080  	MOVWF INDF

	            break;
030F  2B3C  	GOTO	label268440164


	        case BLU_RESPONSE_RING:
01BD  0870  	MOVF FCD_Blueto_00022_arg_respo_00023, W
01BE  3A07  	XORLW 0x07
01BF  1903  	BTFSC STATUS,Z
01C0  2B10  	GOTO	label268440154
0310        label268440154

	            BLU_RESPONSE_ARRAY[resp_size++] = 'R';
0310  1383  	BCF	STATUS,IRP
0311  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0312  0084  	MOVWF FSR
0313  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0314  0784  	ADDWF FSR, F
0315  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0316  3052  	MOVLW 0x52
0317  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'I';
0318  1383  	BCF	STATUS,IRP
0319  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
031A  0084  	MOVWF FSR
031B  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
031C  0784  	ADDWF FSR, F
031D  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
031E  3049  	MOVLW 0x49
031F  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'N';
0320  1383  	BCF	STATUS,IRP
0321  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0322  0084  	MOVWF FSR
0323  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0324  0784  	ADDWF FSR, F
0325  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0326  304E  	MOVLW 0x4E
0327  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = 'G';
0328  1383  	BCF	STATUS,IRP
0329  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
032A  0084  	MOVWF FSR
032B  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
032C  0784  	ADDWF FSR, F
032D  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
032E  3047  	MOVLW 0x47
032F  0080  	MOVWF INDF

	            BLU_RESPONSE_ARRAY[resp_size++] = ' ';
0330  1383  	BCF	STATUS,IRP
0331  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
0332  0084  	MOVWF FSR
0333  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
0334  0784  	ADDWF FSR, F
0335  0AF2  	INCF FCD_Blueto_00022_1_resp_size, F
0336  3020  	MOVLW 0x20
0337  0080  	MOVWF INDF

	            break;
0338  2B3C  	GOTO	label268440164


	        default:
01C1  2B39  	GOTO	label268440155
0339        label268440155

	            //unknown response - error
	            return (0xFF);
0339  30FF  	MOVLW 0xFF
033A  00F7  	MOVWF CompTempVarRet634

	    }
	    BLU_STRING_ARRAY_RXPTR = 0;
033C  01EB  	CLRF gbl_BLU_STRING_ARRAY_RXPTR

	    rx_ptr = 0;
033D  01F4  	CLRF FCD_Blueto_00022_1_rx_ptr

	    while (crlf_flags < 0x03)
033E        label268440253
033E  3003  	MOVLW 0x03
033F  0275  	SUBWF FCD_Blueto_00022_1_crlf_flags, W
0340  1803  	BTFSC STATUS,C
0341  2B8F  	GOTO	label268440254
038F        label268440254

	    {
	        ch = Blu_Read_BLU232_Byte(BLU_RESPONSE_TIMEOUT);
0342  3032  	MOVLW 0x32
0343  00F8  	MOVWF Blu_Read_B_00032_arg_timeout
0344  20CE  	CALL Blu_Read_B_00032
0345  087E  	MOVF CompTempVarRet718, W
0346  00F3  	MOVWF FCD_Blueto_00022_1_ch


	        //if there was a timeout, we need to carry on checking...
	        while (BLU_RX_STATUS != RS_STATUS_OK)
0347        label268440261
0347  08EE  	MOVF gbl_BLU_RX_STATUS, F
0348  1903  	BTFSC STATUS,Z
0349  2B57  	GOTO	label268440262
0356  2B47  	GOTO	label268440261
0357        label268440262

	        {
	            timeout--;
034A  03F1  	DECF FCD_Blueto_00022_arg_timeout, F

	            if (timeout == 0)
034B  08F1  	MOVF FCD_Blueto_00022_arg_timeout, F
034C  1D03  	BTFSS STATUS,Z
034D  2B51  	GOTO	label268440266
0351        label268440266

	            {
	                return (0xFF);
034E  30FF  	MOVLW 0xFF
034F  00F7  	MOVWF CompTempVarRet634

	            }

	            //TODO: may need a delay here to extend the complete timeout value
	            //delay_ms(1);
	            ch = Blu_Read_BLU232_Byte(BLU_RESPONSE_TIMEOUT);        //this should take 1ms
0351  3032  	MOVLW 0x32
0352  00F8  	MOVWF Blu_Read_B_00032_arg_timeout
0353  20CE  	CALL Blu_Read_B_00032
0354  087E  	MOVF CompTempVarRet718, W
0355  00F3  	MOVWF FCD_Blueto_00022_1_ch

	        }
	        if (ch == 0x0D)
0357  0873  	MOVF FCD_Blueto_00022_1_ch, W
0358  3A0D  	XORLW 0x0D
0359  1D03  	BTFSS STATUS,Z
035A  2B5F  	GOTO	label268440274
035F        label268440274

	        {
	            crlf_flags = crlf_flags | 0x01;
035B  3001  	MOVLW 0x01
035C  0475  	IORWF FCD_Blueto_00022_1_crlf_flags, W
035D  00F5  	MOVWF FCD_Blueto_00022_1_crlf_flags


	        }
	        else if (ch == 0x0A)
035E  2B76  	GOTO	label268440288
035F  0873  	MOVF FCD_Blueto_00022_1_ch, W
0360  3A0A  	XORLW 0x0A
0361  1D03  	BTFSS STATUS,Z
0362  2B67  	GOTO	label268440279
0367        label268440279

	        {
	            crlf_flags = crlf_flags | 0x02;
0363  3002  	MOVLW 0x02
0364  0475  	IORWF FCD_Blueto_00022_1_crlf_flags, W
0365  00F5  	MOVWF FCD_Blueto_00022_1_crlf_flags


	        }
	        else
0366  2B76  	GOTO	label268440288

	        {
	            BLU_STRING_ARRAY[BLU_STRING_ARRAY_RXPTR] = ch;
0367  1383  	BCF	STATUS,IRP
0368  3020  	MOVLW LOW(gbl_BLU_STRING_ARRAY+D'0')
0369  0084  	MOVWF FSR
036A  086B  	MOVF gbl_BLU_STRING_ARRAY_RXPTR, W
036B  0784  	ADDWF FSR, F
036C  0873  	MOVF FCD_Blueto_00022_1_ch, W
036D  0080  	MOVWF INDF

	            BLU_STRING_ARRAY_RXPTR++;
036E  0AEB  	INCF gbl_BLU_STRING_ARRAY_RXPTR, F

	            if (BLU_STRING_ARRAY_RXPTR >= BLU_STRING_ARRAY_SIZE)
036F  3020  	MOVLW 0x20
0370  026B  	SUBWF gbl_BLU_STRING_ARRAY_RXPTR, W
0371  1C03  	BTFSS STATUS,C
0372  2B76  	GOTO	label268440288
0376        label268440288

	            {
	                //max buffer size has been reached
	                return (BLU_STRING_ARRAY_RXPTR);
0373  086B  	MOVF gbl_BLU_STRING_ARRAY_RXPTR, W
0374  00F7  	MOVWF CompTempVarRet634

	            }
	        }
	        //we have now received a legitimate character
	        //reset the clrf flags and check for expected input
	        //(if not previously received unexpected chars)
	        if (unexpected == 0)
0376  08F6  	MOVF FCD_Blueto_00022_1_unexpected, F
0377  1D03  	BTFSS STATUS,Z
0378  2B86  	GOTO	label268440292
0386        label268440292

	        {
	            crlf_flags = 0;
0379  01F5  	CLRF FCD_Blueto_00022_1_crlf_flags


	            //is it expected?
	            if (ch != BLU_RESPONSE_ARRAY[rx_ptr])
037A  1383  	BCF	STATUS,IRP
037B  3040  	MOVLW LOW(gbl_BLU_RESPONSE_ARRAY+D'0')
037C  0084  	MOVWF FSR
037D  0874  	MOVF FCD_Blueto_00022_1_rx_ptr, W
037E  0784  	ADDWF FSR, F
037F  0800  	MOVF INDF, W
0380  0673  	XORWF FCD_Blueto_00022_1_ch, W
0381  1903  	BTFSC STATUS,Z
0382  2B85  	GOTO	label268440297
0385        label268440297

	            {
	                unexpected = 1;
0383  3001  	MOVLW 0x01
0384  00F6  	MOVWF FCD_Blueto_00022_1_unexpected

	            }
	            //increment the pointer
	            rx_ptr++;
0385  0AF4  	INCF FCD_Blueto_00022_1_rx_ptr, F

	        }
	        //have we finished looking for the "expected" string
	        if ((unexpected == 0) && (rx_ptr == resp_size))
0386  08F6  	MOVF FCD_Blueto_00022_1_unexpected, F
0387  1D03  	BTFSS STATUS,Z
0388  2B3E  	GOTO	label268440253
0389  0872  	MOVF FCD_Blueto_00022_1_resp_size, W
038A  0674  	XORWF FCD_Blueto_00022_1_rx_ptr, W
038B  1D03  	BTFSS STATUS,Z
038C  2B3E  	GOTO	label268440253

	        {
	            //yes - so return zero
	            return (0);
038D  01F7  	CLRF CompTempVarRet634

	        }
	    }
	    //if we get here, we have received an unexpected response
	    return (BLU_STRING_ARRAY_RXPTR);
038F  086B  	MOVF gbl_BLU_STRING_ARRAY_RXPTR, W
0390  00F7  	MOVWF CompTempVarRet634

}
033B  0008  	RETURN
0350  0008  	RETURN
0375  0008  	RETURN
038E  0008  	RETURN
0391  0008  	RETURN


char FCD_Bluetooth0_StringReceive()

{
	    //returns the number of characters received
	    char ch;
	    char crlf_flags = 0;         //when a cr and lf have been received, this will be > 3
0576  01F1  	CLRF FCD_Blueto_00033_1_crlf_flags

	    char timeout = 0;
0577  01F2  	CLRF FCD_Blueto_00033_1_timeout


	    BLU_STRING_ARRAY_RXPTR = 0;
0578  1283  	BCF STATUS, RP0
0579  1303  	BCF STATUS, RP1
057A  01EB  	CLRF gbl_BLU_STRING_ARRAY_RXPTR

	    BLU_RX_STATUS = RS_STATUS_OK;
057B  01EE  	CLRF gbl_BLU_RX_STATUS


	    while (crlf_flags <= 0x02)
057C        label268440315
057C  0871  	MOVF FCD_Blueto_00033_1_crlf_flags, W
057D  3C02  	SUBLW 0x02
057E  1C03  	BTFSS STATUS,C
057F  2DB0  	GOTO	label268440316
05AF  2D7C  	GOTO	label268440315
05B0        label268440316

	    {
	        ch = Blu_Read_BLU232_Byte(BLU_STRINGRX_TIMEOUT);
0580  300A  	MOVLW 0x0A
0581  00F8  	MOVWF Blu_Read_B_00032_arg_timeout
0582  20CE  	CALL Blu_Read_B_00032
0583  087E  	MOVF CompTempVarRet718, W
0584  00F0  	MOVWF FCD_Blueto_00033_1_ch


	        if (BLU_RX_STATUS == RS_STATUS_OK)
0585  08EE  	MOVF gbl_BLU_RX_STATUS, F
0586  1D03  	BTFSS STATUS,Z
0587  2DA8  	GOTO	label268440323
05A8        label268440323

	        {
	            if (ch == 0x0D)
0588  0870  	MOVF FCD_Blueto_00033_1_ch, W
0589  3A0D  	XORLW 0x0D
058A  1D03  	BTFSS STATUS,Z
058B  2D90  	GOTO	label268440326
0590        label268440326

	            {
	                crlf_flags = crlf_flags | 0x01;
058C  3001  	MOVLW 0x01
058D  0471  	IORWF FCD_Blueto_00033_1_crlf_flags, W
058E  00F1  	MOVWF FCD_Blueto_00033_1_crlf_flags

	            }
	            else if (ch == 0x0A)
058F  2D7C  	GOTO	label268440315
0590  0870  	MOVF FCD_Blueto_00033_1_ch, W
0591  3A0A  	XORLW 0x0A
0592  1D03  	BTFSS STATUS,Z
0593  2D98  	GOTO	label268440331
0598        label268440331

	            {
	                crlf_flags = crlf_flags | 0x02;
0594  3002  	MOVLW 0x02
0595  0471  	IORWF FCD_Blueto_00033_1_crlf_flags, W
0596  00F1  	MOVWF FCD_Blueto_00033_1_crlf_flags

	            }
	            else
0597  2D7C  	GOTO	label268440315

	            {
	                //not a CR or LF
	                BLU_STRING_ARRAY[BLU_STRING_ARRAY_RXPTR] = ch;
0598  1383  	BCF	STATUS,IRP
0599  3020  	MOVLW LOW(gbl_BLU_STRING_ARRAY+D'0')
059A  0084  	MOVWF FSR
059B  086B  	MOVF gbl_BLU_STRING_ARRAY_RXPTR, W
059C  0784  	ADDWF FSR, F
059D  0870  	MOVF FCD_Blueto_00033_1_ch, W
059E  0080  	MOVWF INDF

	                BLU_STRING_ARRAY_RXPTR++;
059F  0AEB  	INCF gbl_BLU_STRING_ARRAY_RXPTR, F

	                //reset the timeout
	                timeout = 0;
05A0  01F2  	CLRF FCD_Blueto_00033_1_timeout

	                if (BLU_STRING_ARRAY_RXPTR >= BLU_STRING_ARRAY_SIZE)
05A1  3020  	MOVLW 0x20
05A2  026B  	SUBWF gbl_BLU_STRING_ARRAY_RXPTR, W
05A3  1C03  	BTFSS STATUS,C
05A4  2D7C  	GOTO	label268440315

	                {
	                    //max buffer size has been reached
	                    crlf_flags = 0xFF;
05A5  30FF  	MOVLW 0xFF
05A6  00F1  	MOVWF FCD_Blueto_00033_1_crlf_flags

	                }
	            }
	        }
	        else
05A7  2D7C  	GOTO	label268440315

	        {
	            timeout++;
05A8  0AF2  	INCF FCD_Blueto_00033_1_timeout, F

	            if (timeout > 1)
05A9  0872  	MOVF FCD_Blueto_00033_1_timeout, W
05AA  3C01  	SUBLW 0x01
05AB  1803  	BTFSC STATUS,C
05AC  2D7C  	GOTO	label268440315

	            {
	                //no further bytes have been received
	                crlf_flags = 0xFF;
05AD  30FF  	MOVLW 0xFF
05AE  00F1  	MOVWF FCD_Blueto_00033_1_crlf_flags

	            }
	        }
	    }
	    return (BLU_STRING_ARRAY_RXPTR);
05B0  086B  	MOVF gbl_BLU_STRING_ARRAY_RXPTR, W
05B1  00F3  	MOVWF CompTempVarRet719

}
05B2  0008  	RETURN


char FCD_Bluetooth0_StringRead(char idx)

{
	    if (idx < BLU_STRING_ARRAY_RXPTR)
0566  1283  	BCF STATUS, RP0
0567  1303  	BCF STATUS, RP1
0568  086B  	MOVF gbl_BLU_STRING_ARRAY_RXPTR, W
0569  0270  	SUBWF FCD_Blueto_00034_arg_idx, W
056A  1803  	BTFSC STATUS,C
056B  2D74  	GOTO	label268440357
0574        label268440357

	    {
	        return (BLU_STRING_ARRAY[idx]);
056C  1383  	BCF	STATUS,IRP
056D  3020  	MOVLW LOW(gbl_BLU_STRING_ARRAY+D'0')
056E  0084  	MOVWF FSR
056F  0870  	MOVF FCD_Blueto_00034_arg_idx, W
0570  0784  	ADDWF FSR, F
0571  0800  	MOVF INDF, W
0572  00F1  	MOVWF CompTempVarRet721

	    }
	    else
	    {
	        return (0);
0574  01F1  	CLRF CompTempVarRet721

	    }
}
0573  0008  	RETURN
0575  0008  	RETURN


char FCD_Bluetooth0_SendScript(char idx)
{
	    char i = 0;
	    char ch = 255;

	    if ((idx < 1) || (idx > BLU_SCRIPT_COUNT))
	    {
	        return (0xFF);        //error - index out of range
	    }
	    while (ch > 0)
	    {
	        switch (idx)
	        {
	          #ifdef BLU_SCRIPT_COUNT1
	            case 1:
	                ch = BLU_SCRIPT_1[i];
	                break;
	          #endif

	          #ifdef BLU_SCRIPT_COUNT2
	            case 2:
	                ch = BLU_SCRIPT_2[i];
	                break;
	          #endif

	          #ifdef BLU_SCRIPT_COUNT3
	            case 3:
	                ch = BLU_SCRIPT_3[i];
	                break;
	          #endif

	          #ifdef BLU_SCRIPT_COUNT4
	            case 4:
	                ch = BLU_SCRIPT_4[i];
	                break;
	          #endif

	            default:
	                return (0xFF);    //should not get here
	        }
	        if (ch > 0)
	        {
	            #ifdef MX_DEBUG_BLU
	                //FCD_LCDDisplay0_PrintASCII(ch);
	            #endif

	            //send the character
	            Blu_Send_BLU232_Byte(ch);

	            //read the echo
	            Blu_Read_BLU232_Byte(BLU_SENDSCRIPT_TIMEOUT);

	            //if we sent a CR, wait for the response
	            if (ch == 13)
	            {
	                //wait until we are receiving no more chars
	                BLU_RX_STATUS = RS_STATUS_OK;
	                while (BLU_RX_STATUS == RS_STATUS_OK)
	                {
	                    ch = Blu_Read_BLU232_Byte(BLU_SENDSCRIPT_TIMEOUT);
	                    #ifdef MX_DEBUG_BLU
	                        //FCD_LCDDisplay0_PrintASCII('.');
	                    #endif
	                }
	            }
	        }
	        i++;
	    }
	    return (0);
}

//Supplementary implementations


void main()

{
	
	//Initialisation
	adcon1 = 0x07;
05D6  3007  	MOVLW 0x07
05D7  1683  	BSF STATUS, RP0
05D8  1303  	BCF STATUS, RP1
05D9  009F  	MOVWF gbl_adcon1



	//Interrupt initialisation code
	option_reg = 0xC0;
05DA  30C0  	MOVLW 0xC0
05DB  0081  	MOVWF gbl_option_reg



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::Start
	FCD_LCDDisplay0_Start();
05DC  2529  	CALL FCD_LCDDis_00025



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII("rx.")
	FCD_LCDDisplay0_PrintASCII('r');
05DD  3072  	MOVLW 0x72
05DE  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
05DF  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('x');
05E0  3078  	MOVLW 0x78
05E1  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
05E2  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('.');
05E3  302E  	MOVLW 0x2E
05E4  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
05E5  2514  	CALL FCD_LCDDis_00028



	//Call Macro
	//Call Component Macro: Bluetooth(0)::Initialize
	FCD_Bluetooth0_Initialize();
05E6  25B3  	CALL FCD_Blueto_0002F



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII("done.")
	FCD_LCDDisplay0_PrintASCII('d');
05E7  3064  	MOVLW 0x64
05E8  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
05E9  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('o');
05EA  306F  	MOVLW 0x6F
05EB  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
05EC  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('n');
05ED  306E  	MOVLW 0x6E
05EE  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
05EF  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('e');
05F0  3065  	MOVLW 0x65
05F1  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
05F2  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('.');
05F3  302E  	MOVLW 0x2E
05F4  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
05F5  2514  	CALL FCD_LCDDis_00028



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::StringReceive
	FCV_RET = FCD_Bluetooth0_StringReceive();
05F6  2576  	CALL FCD_Blueto_00033
05F7  0873  	MOVF CompTempVarRet719, W
05F8  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::StringReceive
	FCV_RET = FCD_Bluetooth0_StringReceive();
05F9  2576  	CALL FCD_Blueto_00033
05FA  0873  	MOVF CompTempVarRet719, W
05FB  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::StringReceive
	FCV_RET = FCD_Bluetooth0_StringReceive();
05FC  2576  	CALL FCD_Blueto_00033
05FD  0873  	MOVF CompTempVarRet719, W
05FE  00E5  	MOVWF gbl_FCV_RET



	//Delay
	//Delay: 1 s
	delay_s(1);
05FF  3001  	MOVLW 0x01
0600  00F0  	MOVWF delay_s_00000_arg_del
0601  2046  	CALL delay_s_00000



	//Calculation
	//Calculation:
	//  ERR = 0
	FCV_ERR =  0 ;
0602  01E1  	CLRF gbl_FCV_ERR

	

	//Call Macro
	//Call Component Macro: LCDDisplay(0)::Clear
	FCD_LCDDisplay0_Clear();
0603  251A  	CALL FCD_LCDDis_00027



	//Comment:
	//Firmware reset
	//AT&F*


	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("AT&f*")
	FCV_RET = FCD_Bluetooth0_CreateCommand('A');
0604  3041  	MOVLW 0x41
0605  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0606  23C3  	CALL FCD_Blueto_00020
0607  0871  	MOVF CompTempVarRet629, W
0608  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('T');
0609  3054  	MOVLW 0x54
060A  00F0  	MOVWF FCD_Blueto_00020_arg_ch
060B  23C3  	CALL FCD_Blueto_00020
060C  0871  	MOVF CompTempVarRet629, W
060D  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('&');
060E  3026  	MOVLW 0x26
060F  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0610  23C3  	CALL FCD_Blueto_00020
0611  0871  	MOVF CompTempVarRet629, W
0612  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('f');
0613  3066  	MOVLW 0x66
0614  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0615  23C3  	CALL FCD_Blueto_00020
0616  0871  	MOVF CompTempVarRet629, W
0617  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('*');
0618  302A  	MOVLW 0x2A
0619  00F0  	MOVWF FCD_Blueto_00020_arg_ch
061A  23C3  	CALL FCD_Blueto_00020
061B  0871  	MOVF CompTempVarRet629, W
061C  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(1, 1)
	FCV_RET = FCD_Bluetooth0_SendCommand(1, 1);
061D  3001  	MOVLW 0x01
061E  00F0  	MOVWF FCD_Blueto_00021_arg_bExpectEcho
061F  00F1  	MOVWF FCD_Blueto_00021_arg_bSendCR
0620  2392  	CALL FCD_Blueto_00021
0621  0874  	MOVF CompTempVarRet631, W
0622  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII('.')
	FCD_LCDDisplay0_PrintASCII('.');
0623  302E  	MOVLW 0x2E
0624  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0625  2514  	CALL FCD_LCDDis_00028



	//Delay
	//Delay: 1 s
	delay_s(1);
0626  3001  	MOVLW 0x01
0627  00F0  	MOVWF delay_s_00000_arg_del
0628  2046  	CALL delay_s_00000



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::WaitForResponse(1, 100)
	FCV_RET = FCD_Bluetooth0_WaitForResponse(1, 100);
0629  3001  	MOVLW 0x01
062A  00F0  	MOVWF FCD_Blueto_00022_arg_respo_00023
062B  3064  	MOVLW 0x64
062C  00F1  	MOVWF FCD_Blueto_00022_arg_timeout
062D  2191  	CALL FCD_Blueto_00022
062E  0877  	MOVF CompTempVarRet634, W
062F  00E5  	MOVWF gbl_FCV_RET



	//Decision
	//Decision: RET <> 0?
	if( FCV_RET != 0 )
0630  08E5  	MOVF gbl_FCV_RET, F
0632  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
0631  158A  	BSF PCLATH,3
0633  28FA  	GOTO	label268440730



	}


	//Comment:
	//Reset the device
	//ATZ


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
0634  0A61  	INCF gbl_FCV_ERR, W
0635  00E1  	MOVWF gbl_FCV_ERR

	

	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("ATZ")
	FCV_RET = FCD_Bluetooth0_CreateCommand('A');
0636  3041  	MOVLW 0x41
0637  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0638  118A  	BCF PCLATH,3
0639  23C3  	CALL FCD_Blueto_00020
063A  0871  	MOVF CompTempVarRet629, W
063B  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('T');
063C  3054  	MOVLW 0x54
063D  00F0  	MOVWF FCD_Blueto_00020_arg_ch
063E  23C3  	CALL FCD_Blueto_00020
063F  0871  	MOVF CompTempVarRet629, W
0640  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('Z');
0641  305A  	MOVLW 0x5A
0642  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0643  23C3  	CALL FCD_Blueto_00020
0644  0871  	MOVF CompTempVarRet629, W
0645  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(1, 1)
	FCV_RET = FCD_Bluetooth0_SendCommand(1, 1);
0646  3001  	MOVLW 0x01
0647  00F0  	MOVWF FCD_Blueto_00021_arg_bExpectEcho
0648  00F1  	MOVWF FCD_Blueto_00021_arg_bSendCR
0649  2392  	CALL FCD_Blueto_00021
064A  0874  	MOVF CompTempVarRet631, W
064B  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII('.')
	FCD_LCDDisplay0_PrintASCII('.');
064C  302E  	MOVLW 0x2E
064D  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
064E  2514  	CALL FCD_LCDDis_00028



	//Delay
	//Delay: 1 s
	delay_s(1);
064F  3001  	MOVLW 0x01
0650  00F0  	MOVWF delay_s_00000_arg_del
0651  2046  	CALL delay_s_00000



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::WaitForResponse(1, 10)
	FCV_RET = FCD_Bluetooth0_WaitForResponse(1, 10);
0652  3001  	MOVLW 0x01
0653  00F0  	MOVWF FCD_Blueto_00022_arg_respo_00023
0654  300A  	MOVLW 0x0A
0655  00F1  	MOVWF FCD_Blueto_00022_arg_timeout
0656  2191  	CALL FCD_Blueto_00022
0657  0877  	MOVF CompTempVarRet634, W
0658  00E5  	MOVWF gbl_FCV_RET



	//Decision
	//Decision: RET <> 0?
	if( FCV_RET != 0 )
0659  08E5  	MOVF gbl_FCV_RET, F
065B  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
065A  158A  	BSF PCLATH,3
065C  28FA  	GOTO	label268440730



	}


	//Comment:
	//Set the passkey
	//AT+BTK="1234"


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
065D  0A61  	INCF gbl_FCV_ERR, W
065E  00E1  	MOVWF gbl_FCV_ERR

	

	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("AT+BTK=")
	FCV_RET = FCD_Bluetooth0_CreateCommand('A');
065F  3041  	MOVLW 0x41
0660  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0661  118A  	BCF PCLATH,3
0662  23C3  	CALL FCD_Blueto_00020
0663  0871  	MOVF CompTempVarRet629, W
0664  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('T');
0665  3054  	MOVLW 0x54
0666  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0667  23C3  	CALL FCD_Blueto_00020
0668  0871  	MOVF CompTempVarRet629, W
0669  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('+');
066A  302B  	MOVLW 0x2B
066B  00F0  	MOVWF FCD_Blueto_00020_arg_ch
066C  23C3  	CALL FCD_Blueto_00020
066D  0871  	MOVF CompTempVarRet629, W
066E  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('B');
066F  3042  	MOVLW 0x42
0670  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0671  23C3  	CALL FCD_Blueto_00020
0672  0871  	MOVF CompTempVarRet629, W
0673  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('T');
0674  3054  	MOVLW 0x54
0675  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0676  23C3  	CALL FCD_Blueto_00020
0677  0871  	MOVF CompTempVarRet629, W
0678  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('K');
0679  304B  	MOVLW 0x4B
067A  00F0  	MOVWF FCD_Blueto_00020_arg_ch
067B  23C3  	CALL FCD_Blueto_00020
067C  0871  	MOVF CompTempVarRet629, W
067D  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('=');
067E  303D  	MOVLW 0x3D
067F  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0680  23C3  	CALL FCD_Blueto_00020
0681  0871  	MOVF CompTempVarRet629, W
0682  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand(34)
	FCV_RET = FCD_Bluetooth0_CreateCommand(34);
0683  3022  	MOVLW 0x22
0684  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0685  23C3  	CALL FCD_Blueto_00020
0686  0871  	MOVF CompTempVarRet629, W
0687  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("1234")
	FCV_RET = FCD_Bluetooth0_CreateCommand('1');
0688  3031  	MOVLW 0x31
0689  00F0  	MOVWF FCD_Blueto_00020_arg_ch
068A  23C3  	CALL FCD_Blueto_00020
068B  0871  	MOVF CompTempVarRet629, W
068C  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('2');
068D  3032  	MOVLW 0x32
068E  00F0  	MOVWF FCD_Blueto_00020_arg_ch
068F  23C3  	CALL FCD_Blueto_00020
0690  0871  	MOVF CompTempVarRet629, W
0691  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('3');
0692  3033  	MOVLW 0x33
0693  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0694  23C3  	CALL FCD_Blueto_00020
0695  0871  	MOVF CompTempVarRet629, W
0696  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('4');
0697  3034  	MOVLW 0x34
0698  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0699  23C3  	CALL FCD_Blueto_00020
069A  0871  	MOVF CompTempVarRet629, W
069B  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand(34)
	FCV_RET = FCD_Bluetooth0_CreateCommand(34);
069C  3022  	MOVLW 0x22
069D  00F0  	MOVWF FCD_Blueto_00020_arg_ch
069E  23C3  	CALL FCD_Blueto_00020
069F  0871  	MOVF CompTempVarRet629, W
06A0  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII('.')
	FCD_LCDDisplay0_PrintASCII('.');
06A1  302E  	MOVLW 0x2E
06A2  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
06A3  2514  	CALL FCD_LCDDis_00028



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(1, 1)
	FCV_RET = FCD_Bluetooth0_SendCommand(1, 1);
06A4  3001  	MOVLW 0x01
06A5  00F0  	MOVWF FCD_Blueto_00021_arg_bExpectEcho
06A6  00F1  	MOVWF FCD_Blueto_00021_arg_bSendCR
06A7  2392  	CALL FCD_Blueto_00021
06A8  0874  	MOVF CompTempVarRet631, W
06A9  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::WaitForResponse(1, 10)
	FCV_RET = FCD_Bluetooth0_WaitForResponse(1, 10);
06AA  3001  	MOVLW 0x01
06AB  00F0  	MOVWF FCD_Blueto_00022_arg_respo_00023
06AC  300A  	MOVLW 0x0A
06AD  00F1  	MOVWF FCD_Blueto_00022_arg_timeout
06AE  2191  	CALL FCD_Blueto_00022
06AF  0877  	MOVF CompTempVarRet634, W
06B0  00E5  	MOVWF gbl_FCV_RET



	//Decision
	//Decision: RET <> 0?
	if( FCV_RET != 0 )
06B1  08E5  	MOVF gbl_FCV_RET, F
06B3  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
06B2  158A  	BSF PCLATH,3
06B4  28FA  	GOTO	label268440730



	}


	//Comment:
	//Pair with the tester board
	//AT+BTW00809894BA05


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
06B5  0A61  	INCF gbl_FCV_ERR, W
06B6  00E1  	MOVWF gbl_FCV_ERR

	

	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("AT+BTW008098E44961")
	FCV_RET = FCD_Bluetooth0_CreateCommand('A');
06B7  3041  	MOVLW 0x41
06B8  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06B9  118A  	BCF PCLATH,3
06BA  23C3  	CALL FCD_Blueto_00020
06BB  0871  	MOVF CompTempVarRet629, W
06BC  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('T');
06BD  3054  	MOVLW 0x54
06BE  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06BF  23C3  	CALL FCD_Blueto_00020
06C0  0871  	MOVF CompTempVarRet629, W
06C1  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('+');
06C2  302B  	MOVLW 0x2B
06C3  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06C4  23C3  	CALL FCD_Blueto_00020
06C5  0871  	MOVF CompTempVarRet629, W
06C6  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('B');
06C7  3042  	MOVLW 0x42
06C8  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06C9  23C3  	CALL FCD_Blueto_00020
06CA  0871  	MOVF CompTempVarRet629, W
06CB  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('T');
06CC  3054  	MOVLW 0x54
06CD  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06CE  23C3  	CALL FCD_Blueto_00020
06CF  0871  	MOVF CompTempVarRet629, W
06D0  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('W');
06D1  3057  	MOVLW 0x57
06D2  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06D3  23C3  	CALL FCD_Blueto_00020
06D4  0871  	MOVF CompTempVarRet629, W
06D5  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('0');
06D6  3030  	MOVLW 0x30
06D7  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06D8  23C3  	CALL FCD_Blueto_00020
06D9  0871  	MOVF CompTempVarRet629, W
06DA  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('0');
06DB  3030  	MOVLW 0x30
06DC  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06DD  23C3  	CALL FCD_Blueto_00020
06DE  0871  	MOVF CompTempVarRet629, W
06DF  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('8');
06E0  3038  	MOVLW 0x38
06E1  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06E2  23C3  	CALL FCD_Blueto_00020
06E3  0871  	MOVF CompTempVarRet629, W
06E4  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('0');
06E5  3030  	MOVLW 0x30
06E6  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06E7  23C3  	CALL FCD_Blueto_00020
06E8  0871  	MOVF CompTempVarRet629, W
06E9  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('9');
06EA  3039  	MOVLW 0x39
06EB  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06EC  23C3  	CALL FCD_Blueto_00020
06ED  0871  	MOVF CompTempVarRet629, W
06EE  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('8');
06EF  3038  	MOVLW 0x38
06F0  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06F1  23C3  	CALL FCD_Blueto_00020
06F2  0871  	MOVF CompTempVarRet629, W
06F3  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('E');
06F4  3045  	MOVLW 0x45
06F5  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06F6  23C3  	CALL FCD_Blueto_00020
06F7  0871  	MOVF CompTempVarRet629, W
06F8  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('4');
06F9  3034  	MOVLW 0x34
06FA  00F0  	MOVWF FCD_Blueto_00020_arg_ch
06FB  23C3  	CALL FCD_Blueto_00020
06FC  0871  	MOVF CompTempVarRet629, W
06FD  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('4');
06FE  3034  	MOVLW 0x34
06FF  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0700  23C3  	CALL FCD_Blueto_00020
0701  0871  	MOVF CompTempVarRet629, W
0702  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('9');
0703  3039  	MOVLW 0x39
0704  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0705  23C3  	CALL FCD_Blueto_00020
0706  0871  	MOVF CompTempVarRet629, W
0707  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('6');
0708  3036  	MOVLW 0x36
0709  00F0  	MOVWF FCD_Blueto_00020_arg_ch
070A  23C3  	CALL FCD_Blueto_00020
070B  0871  	MOVF CompTempVarRet629, W
070C  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('1');
070D  3031  	MOVLW 0x31
070E  00F0  	MOVWF FCD_Blueto_00020_arg_ch
070F  23C3  	CALL FCD_Blueto_00020
0710  0871  	MOVF CompTempVarRet629, W
0711  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(1, 1)
	FCV_RET = FCD_Bluetooth0_SendCommand(1, 1);
0712  3001  	MOVLW 0x01
0713  00F0  	MOVWF FCD_Blueto_00021_arg_bExpectEcho
0714  00F1  	MOVWF FCD_Blueto_00021_arg_bSendCR
0715  2392  	CALL FCD_Blueto_00021
0716  0874  	MOVF CompTempVarRet631, W
0717  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII('.')
	FCD_LCDDisplay0_PrintASCII('.');
0718  302E  	MOVLW 0x2E
0719  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
071A  2514  	CALL FCD_LCDDis_00028



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::WaitForResponse(1, 10)
	FCV_RET = FCD_Bluetooth0_WaitForResponse(1, 10);
071B  3001  	MOVLW 0x01
071C  00F0  	MOVWF FCD_Blueto_00022_arg_respo_00023
071D  300A  	MOVLW 0x0A
071E  00F1  	MOVWF FCD_Blueto_00022_arg_timeout
071F  2191  	CALL FCD_Blueto_00022
0720  0877  	MOVF CompTempVarRet634, W
0721  00E5  	MOVWF gbl_FCV_RET



	//Decision
	//Decision: RET <> 0?
	if( FCV_RET != 0 )
0722  08E5  	MOVF gbl_FCV_RET, F
0724  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
0723  158A  	BSF PCLATH,3
0725  28FA  	GOTO	label268440730



	}


	//Comment:
	//Wait until the "PAIR" notification comes through


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
0726  0A61  	INCF gbl_FCV_ERR, W
0727  00E1  	MOVWF gbl_FCV_ERR

	

	//Delay
	//Delay: 4 s
	delay_s(4);
0728  3004  	MOVLW 0x04
0729  00F0  	MOVWF delay_s_00000_arg_del
072A  118A  	BCF PCLATH,3
072B  2046  	CALL delay_s_00000



	//Connection Point
	//Connection Point: D
FCC_Main_D:


	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::WaitForResponse(6, 250)
	FCV_RET = FCD_Bluetooth0_WaitForResponse(6, 250);
072C  3006  	MOVLW 0x06
072D  00F0  	MOVWF FCD_Blueto_00022_arg_respo_00023
072E  30FA  	MOVLW 0xFA
072F  00F1  	MOVWF FCD_Blueto_00022_arg_timeout
0730  2191  	CALL FCD_Blueto_00022
0731  0877  	MOVF CompTempVarRet634, W
0732  00E5  	MOVWF gbl_FCV_RET



	//Decision
	//Decision: RET <> 0?
	if( FCV_RET != 0 )
0733  08E5  	MOVF gbl_FCV_RET, F
0735  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
0734  158A  	BSF PCLATH,3
0736  28FA  	GOTO	label268440730



	}


	//Comment:
	//Next character should be a zero...
	//Make sure something else was received


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
0737  0A61  	INCF gbl_FCV_ERR, W
0738  00E1  	MOVWF gbl_FCV_ERR

	

	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::StringReceive
	FCV_RET = FCD_Bluetooth0_StringReceive();
0739  118A  	BCF PCLATH,3
073A  2576  	CALL FCD_Blueto_00033
073B  0873  	MOVF CompTempVarRet719, W
073C  00E5  	MOVWF gbl_FCV_RET



	//Decision
	//Decision: RET = 0?
	if( FCV_RET == 0 )
073D  08E5  	MOVF gbl_FCV_RET, F
073F  1903  	BTFSC STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
073E  158A  	BSF PCLATH,3
0740  28FA  	GOTO	label268440730



	}


	//Comment:
	//Make sure it was a zero


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
0741  0A61  	INCF gbl_FCV_ERR, W
0742  00E1  	MOVWF gbl_FCV_ERR

	

	//Call Macro
	//Call Component Macro: CHAR=Bluetooth(0)::StringRead(0)
	FCV_CHAR = FCD_Bluetooth0_StringRead(0);
0743  01F0  	CLRF FCD_Blueto_00034_arg_idx
0744  118A  	BCF PCLATH,3
0745  2566  	CALL FCD_Blueto_00034
0746  0871  	MOVF CompTempVarRet721, W
0747  00E4  	MOVWF gbl_FCV_CHAR



	//Decision
	//Decision: CHAR <> '0'?
	if( FCV_CHAR != '0' )
0748  3A30  	XORLW 0x30
074A  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
0749  158A  	BSF PCLATH,3
074B  28FA  	GOTO	label268440730



	}


	//Comment:
	//Receive string to flush the buffer


	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::StringReceive
	FCV_RET = FCD_Bluetooth0_StringReceive();
074C  118A  	BCF PCLATH,3
074D  2576  	CALL FCD_Blueto_00033
074E  0873  	MOVF CompTempVarRet719, W
074F  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::StringReceive
	FCV_RET = FCD_Bluetooth0_StringReceive();
0750  2576  	CALL FCD_Blueto_00033
0751  0873  	MOVF CompTempVarRet719, W
0752  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::StringReceive
	FCV_RET = FCD_Bluetooth0_StringReceive();
0753  2576  	CALL FCD_Blueto_00033
0754  0873  	MOVF CompTempVarRet719, W
0755  00E5  	MOVWF gbl_FCV_RET



	//Comment:
	//Connect to the test board
	//ATD00809894BA05


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
0756  0A61  	INCF gbl_FCV_ERR, W
0757  00E1  	MOVWF gbl_FCV_ERR

	

	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("ATD008098E44961")
	FCV_RET = FCD_Bluetooth0_CreateCommand('A');
0758  3041  	MOVLW 0x41
0759  00F0  	MOVWF FCD_Blueto_00020_arg_ch
075A  23C3  	CALL FCD_Blueto_00020
075B  0871  	MOVF CompTempVarRet629, W
075C  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('T');
075D  3054  	MOVLW 0x54
075E  00F0  	MOVWF FCD_Blueto_00020_arg_ch
075F  23C3  	CALL FCD_Blueto_00020
0760  0871  	MOVF CompTempVarRet629, W
0761  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('D');
0762  3044  	MOVLW 0x44
0763  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0764  23C3  	CALL FCD_Blueto_00020
0765  0871  	MOVF CompTempVarRet629, W
0766  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('0');
0767  3030  	MOVLW 0x30
0768  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0769  23C3  	CALL FCD_Blueto_00020
076A  0871  	MOVF CompTempVarRet629, W
076B  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('0');
076C  3030  	MOVLW 0x30
076D  00F0  	MOVWF FCD_Blueto_00020_arg_ch
076E  23C3  	CALL FCD_Blueto_00020
076F  0871  	MOVF CompTempVarRet629, W
0770  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('8');
0771  3038  	MOVLW 0x38
0772  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0773  23C3  	CALL FCD_Blueto_00020
0774  0871  	MOVF CompTempVarRet629, W
0775  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('0');
0776  3030  	MOVLW 0x30
0777  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0778  23C3  	CALL FCD_Blueto_00020
0779  0871  	MOVF CompTempVarRet629, W
077A  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('9');
077B  3039  	MOVLW 0x39
077C  00F0  	MOVWF FCD_Blueto_00020_arg_ch
077D  23C3  	CALL FCD_Blueto_00020
077E  0871  	MOVF CompTempVarRet629, W
077F  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('8');
0780  3038  	MOVLW 0x38
0781  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0782  23C3  	CALL FCD_Blueto_00020
0783  0871  	MOVF CompTempVarRet629, W
0784  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('E');
0785  3045  	MOVLW 0x45
0786  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0787  23C3  	CALL FCD_Blueto_00020
0788  0871  	MOVF CompTempVarRet629, W
0789  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('4');
078A  3034  	MOVLW 0x34
078B  00F0  	MOVWF FCD_Blueto_00020_arg_ch
078C  23C3  	CALL FCD_Blueto_00020
078D  0871  	MOVF CompTempVarRet629, W
078E  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('4');
078F  3034  	MOVLW 0x34
0790  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0791  23C3  	CALL FCD_Blueto_00020
0792  0871  	MOVF CompTempVarRet629, W
0793  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('9');
0794  3039  	MOVLW 0x39
0795  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0796  23C3  	CALL FCD_Blueto_00020
0797  0871  	MOVF CompTempVarRet629, W
0798  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('6');
0799  3036  	MOVLW 0x36
079A  00F0  	MOVWF FCD_Blueto_00020_arg_ch
079B  23C3  	CALL FCD_Blueto_00020
079C  0871  	MOVF CompTempVarRet629, W
079D  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('1');
079E  3031  	MOVLW 0x31
079F  00F0  	MOVWF FCD_Blueto_00020_arg_ch
07A0  23C3  	CALL FCD_Blueto_00020
07A1  0871  	MOVF CompTempVarRet629, W
07A2  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(1, 1)
	FCV_RET = FCD_Bluetooth0_SendCommand(1, 1);
07A3  3001  	MOVLW 0x01
07A4  00F0  	MOVWF FCD_Blueto_00021_arg_bExpectEcho
07A5  00F1  	MOVWF FCD_Blueto_00021_arg_bSendCR
07A6  2392  	CALL FCD_Blueto_00021
07A7  0874  	MOVF CompTempVarRet631, W
07A8  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII('.')
	FCD_LCDDisplay0_PrintASCII('.');
07A9  302E  	MOVLW 0x2E
07AA  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07AB  2514  	CALL FCD_LCDDis_00028



	//Comment:
	//Wait until the "CONNECT" notification comes through


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
07AC  0A61  	INCF gbl_FCV_ERR, W
07AD  00E1  	MOVWF gbl_FCV_ERR

	

	//Delay
	//Delay: 1 s
	delay_s(1);
07AE  3001  	MOVLW 0x01
07AF  00F0  	MOVWF delay_s_00000_arg_del
07B0  2046  	CALL delay_s_00000



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::WaitForResponse(3, 100)
	FCV_RET = FCD_Bluetooth0_WaitForResponse(3, 100);
07B1  3003  	MOVLW 0x03
07B2  00F0  	MOVWF FCD_Blueto_00022_arg_respo_00023
07B3  3064  	MOVLW 0x64
07B4  00F1  	MOVWF FCD_Blueto_00022_arg_timeout
07B5  2191  	CALL FCD_Blueto_00022
07B6  0877  	MOVF CompTempVarRet634, W
07B7  00E5  	MOVWF gbl_FCV_RET



	//Decision
	//Decision: RET <> 0?
	if( FCV_RET != 0 )
07B8  08E5  	MOVF gbl_FCV_RET, F
07BA  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
07B9  158A  	BSF PCLATH,3
07BB  28FA  	GOTO	label268440730



	}


	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII("connected")
	FCD_LCDDisplay0_PrintASCII('c');
07BC  3063  	MOVLW 0x63
07BD  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07BE  118A  	BCF PCLATH,3
07BF  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('o');
07C0  306F  	MOVLW 0x6F
07C1  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07C2  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('n');
07C3  306E  	MOVLW 0x6E
07C4  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07C5  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('n');
07C6  306E  	MOVLW 0x6E
07C7  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07C8  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('e');
07C9  3065  	MOVLW 0x65
07CA  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07CB  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('c');
07CC  3063  	MOVLW 0x63
07CD  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07CE  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('t');
07CF  3074  	MOVLW 0x74
07D0  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07D1  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('e');
07D2  3065  	MOVLW 0x65
07D3  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07D4  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('d');
07D5  3064  	MOVLW 0x64
07D6  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07D7  2514  	CALL FCD_LCDDis_00028



	//Delay
	//Delay: 2 s
	delay_s(2);
07D8  3002  	MOVLW 0x02
07D9  00F0  	MOVWF delay_s_00000_arg_del
07DA  2046  	CALL delay_s_00000



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::Clear
	FCD_LCDDisplay0_Clear();
07DB  251A  	CALL FCD_LCDDis_00027



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII("sending...")
	FCD_LCDDisplay0_PrintASCII('s');
07DC  3073  	MOVLW 0x73
07DD  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07DE  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('e');
07DF  3065  	MOVLW 0x65
07E0  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07E1  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('n');
07E2  306E  	MOVLW 0x6E
07E3  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07E4  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('d');
07E5  3064  	MOVLW 0x64
07E6  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07E7  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('i');
07E8  3069  	MOVLW 0x69
07E9  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07EA  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('n');
07EB  306E  	MOVLW 0x6E
07EC  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07ED  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('g');
07EE  3067  	MOVLW 0x67
07EF  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07F0  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('.');
07F1  302E  	MOVLW 0x2E
07F2  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07F3  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('.');
07F4  302E  	MOVLW 0x2E
07F5  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07F6  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('.');
07F7  302E  	MOVLW 0x2E
07F8  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
07F9  2514  	CALL FCD_LCDDis_00028



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("*Unit passed*")
	FCV_RET = FCD_Bluetooth0_CreateCommand('*');
07FA  302A  	MOVLW 0x2A
07FB  00F0  	MOVWF FCD_Blueto_00020_arg_ch
07FC  23C3  	CALL FCD_Blueto_00020
07FD  0871  	MOVF CompTempVarRet629, W
07FE  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('U');
07FF  3055  	MOVLW 0x55
0800  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0801  23C3  	CALL FCD_Blueto_00020
0802  0871  	MOVF CompTempVarRet629, W
0803  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('n');
0804  306E  	MOVLW 0x6E
0805  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0806  23C3  	CALL FCD_Blueto_00020
0807  0871  	MOVF CompTempVarRet629, W
0808  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('i');
0809  3069  	MOVLW 0x69
080A  00F0  	MOVWF FCD_Blueto_00020_arg_ch
080B  23C3  	CALL FCD_Blueto_00020
080C  0871  	MOVF CompTempVarRet629, W
080D  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('t');
080E  3074  	MOVLW 0x74
080F  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0810  23C3  	CALL FCD_Blueto_00020
0811  0871  	MOVF CompTempVarRet629, W
0812  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand(' ');
0813  3020  	MOVLW 0x20
0814  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0815  23C3  	CALL FCD_Blueto_00020
0816  0871  	MOVF CompTempVarRet629, W
0817  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('p');
0818  3070  	MOVLW 0x70
0819  00F0  	MOVWF FCD_Blueto_00020_arg_ch
081A  23C3  	CALL FCD_Blueto_00020
081B  0871  	MOVF CompTempVarRet629, W
081C  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('a');
081D  3061  	MOVLW 0x61
081E  00F0  	MOVWF FCD_Blueto_00020_arg_ch
081F  23C3  	CALL FCD_Blueto_00020
0820  0871  	MOVF CompTempVarRet629, W
0821  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('s');
0822  3073  	MOVLW 0x73
0823  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0824  23C3  	CALL FCD_Blueto_00020
0825  0871  	MOVF CompTempVarRet629, W
0826  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('s');
0827  3073  	MOVLW 0x73
0828  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0829  23C3  	CALL FCD_Blueto_00020
082A  0871  	MOVF CompTempVarRet629, W
082B  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('e');
082C  3065  	MOVLW 0x65
082D  00F0  	MOVWF FCD_Blueto_00020_arg_ch
082E  23C3  	CALL FCD_Blueto_00020
082F  0871  	MOVF CompTempVarRet629, W
0830  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('d');
0831  3064  	MOVLW 0x64
0832  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0833  23C3  	CALL FCD_Blueto_00020
0834  0871  	MOVF CompTempVarRet629, W
0835  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('*');
0836  302A  	MOVLW 0x2A
0837  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0838  23C3  	CALL FCD_Blueto_00020
0839  0871  	MOVF CompTempVarRet629, W
083A  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(0, 0)
	FCV_RET = FCD_Bluetooth0_SendCommand(0, 0);
083B  01F0  	CLRF FCD_Blueto_00021_arg_bExpectEcho
083C  01F1  	CLRF FCD_Blueto_00021_arg_bSendCR
083D  2392  	CALL FCD_Blueto_00021
083E  0874  	MOVF CompTempVarRet631, W
083F  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::Cursor(0, 1)
	FCD_LCDDisplay0_Cursor(0, 1);
0840  01F0  	CLRF FCD_LCDDis_0002B_arg_x
0841  3001  	MOVLW 0x01
0842  00F1  	MOVWF FCD_LCDDis_0002B_arg_y
0843  2503  	CALL FCD_LCDDis_0002B



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII("press A0")
	FCD_LCDDisplay0_PrintASCII('p');
0844  3070  	MOVLW 0x70
0845  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0846  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('r');
0847  3072  	MOVLW 0x72
0848  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0849  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('e');
084A  3065  	MOVLW 0x65
084B  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
084C  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('s');
084D  3073  	MOVLW 0x73
084E  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
084F  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('s');
0850  3073  	MOVLW 0x73
0851  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0852  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII(' ');
0853  3020  	MOVLW 0x20
0854  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0855  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('A');
0856  3041  	MOVLW 0x41
0857  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0858  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('0');
0859  3030  	MOVLW 0x30
085A  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
085B  2514  	CALL FCD_LCDDis_00028



	//Connection Point
	//Connection Point: B
FCC_Main_B:
085C        label268441229



	//Input
	//Input: PORT A -> IN
	trisa = trisa | 0xff;
085C  30FF  	MOVLW 0xFF
085D  1683  	BSF STATUS, RP0
085E  0405  	IORWF gbl_trisa, W
085F  0085  	MOVWF gbl_trisa

	FCV_IN = porta;
0860  1283  	BCF STATUS, RP0
0861  0805  	MOVF gbl_porta, W
0862  00E3  	MOVWF gbl_FCV_IN



	//Decision
	//Decision: IN <> 1?
	if( FCV_IN != 1 )
0863  0363  	DECF gbl_FCV_IN, W
0865  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: B
		goto FCC_Main_B;
0864  158A  	BSF PCLATH,3
0866  285C  	GOTO	label268441229



	}


	//Comment:
	//Receive string to flush the buffer


	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::StringReceive
	FCV_RET = FCD_Bluetooth0_StringReceive();
0867  118A  	BCF PCLATH,3
0868  2576  	CALL FCD_Blueto_00033
0869  0873  	MOVF CompTempVarRet719, W
086A  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::StringReceive
	FCV_RET = FCD_Bluetooth0_StringReceive();
086B  2576  	CALL FCD_Blueto_00033
086C  0873  	MOVF CompTempVarRet719, W
086D  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::StringReceive
	FCV_RET = FCD_Bluetooth0_StringReceive();
086E  2576  	CALL FCD_Blueto_00033
086F  0873  	MOVF CompTempVarRet719, W
0870  00E5  	MOVWF gbl_FCV_RET



	//Comment:
	//Break into data mode


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
0871  0A61  	INCF gbl_FCV_ERR, W
0872  00E1  	MOVWF gbl_FCV_ERR

	

	//Call Macro
	//Call Component Macro: LCDDisplay(0)::Start
	FCD_LCDDisplay0_Start();
0873  2529  	CALL FCD_LCDDis_00025



	//Call Macro
	//Call Macro: ESCAPE
	FCM_ESCAPE();
0874  23D6  	CALL FCM_ESCAPE_00000



	//Decision
	//Decision: RET <> 0?
	if( FCV_RET != 0 )
0875  08E5  	MOVF gbl_FCV_RET, F
0877  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
0876  158A  	BSF PCLATH,3
0878  28FA  	GOTO	label268440730



	}


	//Comment:
	//Disconnect


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
0879  0A61  	INCF gbl_FCV_ERR, W
087A  00E1  	MOVWF gbl_FCV_ERR

	

	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("ATH")
	FCV_RET = FCD_Bluetooth0_CreateCommand('A');
087B  3041  	MOVLW 0x41
087C  00F0  	MOVWF FCD_Blueto_00020_arg_ch
087D  118A  	BCF PCLATH,3
087E  23C3  	CALL FCD_Blueto_00020
087F  0871  	MOVF CompTempVarRet629, W
0880  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('T');
0881  3054  	MOVLW 0x54
0882  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0883  23C3  	CALL FCD_Blueto_00020
0884  0871  	MOVF CompTempVarRet629, W
0885  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('H');
0886  3048  	MOVLW 0x48
0887  00F0  	MOVWF FCD_Blueto_00020_arg_ch
0888  23C3  	CALL FCD_Blueto_00020
0889  0871  	MOVF CompTempVarRet629, W
088A  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(1, 1)
	FCV_RET = FCD_Bluetooth0_SendCommand(1, 1);
088B  3001  	MOVLW 0x01
088C  00F0  	MOVWF FCD_Blueto_00021_arg_bExpectEcho
088D  00F1  	MOVWF FCD_Blueto_00021_arg_bSendCR
088E  2392  	CALL FCD_Blueto_00021
088F  0874  	MOVF CompTempVarRet631, W
0890  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII('.')
	FCD_LCDDisplay0_PrintASCII('.');
0891  302E  	MOVLW 0x2E
0892  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0893  2514  	CALL FCD_LCDDis_00028



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::WaitForResponse(4, 10)
	FCV_RET = FCD_Bluetooth0_WaitForResponse(4, 10);
0894  3004  	MOVLW 0x04
0895  00F0  	MOVWF FCD_Blueto_00022_arg_respo_00023
0896  300A  	MOVLW 0x0A
0897  00F1  	MOVWF FCD_Blueto_00022_arg_timeout
0898  2191  	CALL FCD_Blueto_00022
0899  0877  	MOVF CompTempVarRet634, W
089A  00E5  	MOVWF gbl_FCV_RET



	//Decision
	//Decision: RET <> 0?
	if( FCV_RET != 0 )
089B  08E5  	MOVF gbl_FCV_RET, F
089D  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
089C  158A  	BSF PCLATH,3
089E  28FA  	GOTO	label268440730



	}


	//Comment:
	//Factory reset the board


	//Calculation
	//Calculation:
	//  ERR = ERR + 1
	FCV_ERR =  FCV_ERR + 1 ;
089F  0A61  	INCF gbl_FCV_ERR, W
08A0  00E1  	MOVWF gbl_FCV_ERR

	

	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::CreateCommand("AT&f*")
	FCV_RET = FCD_Bluetooth0_CreateCommand('A');
08A1  3041  	MOVLW 0x41
08A2  00F0  	MOVWF FCD_Blueto_00020_arg_ch
08A3  118A  	BCF PCLATH,3
08A4  23C3  	CALL FCD_Blueto_00020
08A5  0871  	MOVF CompTempVarRet629, W
08A6  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('T');
08A7  3054  	MOVLW 0x54
08A8  00F0  	MOVWF FCD_Blueto_00020_arg_ch
08A9  23C3  	CALL FCD_Blueto_00020
08AA  0871  	MOVF CompTempVarRet629, W
08AB  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('&');
08AC  3026  	MOVLW 0x26
08AD  00F0  	MOVWF FCD_Blueto_00020_arg_ch
08AE  23C3  	CALL FCD_Blueto_00020
08AF  0871  	MOVF CompTempVarRet629, W
08B0  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('f');
08B1  3066  	MOVLW 0x66
08B2  00F0  	MOVWF FCD_Blueto_00020_arg_ch
08B3  23C3  	CALL FCD_Blueto_00020
08B4  0871  	MOVF CompTempVarRet629, W
08B5  00E5  	MOVWF gbl_FCV_RET

	FCV_RET = FCD_Bluetooth0_CreateCommand('*');
08B6  302A  	MOVLW 0x2A
08B7  00F0  	MOVWF FCD_Blueto_00020_arg_ch
08B8  23C3  	CALL FCD_Blueto_00020
08B9  0871  	MOVF CompTempVarRet629, W
08BA  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::SendCommand(1, 1)
	FCV_RET = FCD_Bluetooth0_SendCommand(1, 1);
08BB  3001  	MOVLW 0x01
08BC  00F0  	MOVWF FCD_Blueto_00021_arg_bExpectEcho
08BD  00F1  	MOVWF FCD_Blueto_00021_arg_bSendCR
08BE  2392  	CALL FCD_Blueto_00021
08BF  0874  	MOVF CompTempVarRet631, W
08C0  00E5  	MOVWF gbl_FCV_RET



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII('.')
	FCD_LCDDisplay0_PrintASCII('.');
08C1  302E  	MOVLW 0x2E
08C2  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08C3  2514  	CALL FCD_LCDDis_00028



	//Delay
	//Delay: 100 ms
	delay_ms(100);
08C4  3064  	MOVLW 0x64
08C5  00F2  	MOVWF delay_ms_00000_arg_del
08C6  201E  	CALL delay_ms_00000



	//Call Macro
	//Call Component Macro: RET=Bluetooth(0)::WaitForResponse(1, 100)
	FCV_RET = FCD_Bluetooth0_WaitForResponse(1, 100);
08C7  3001  	MOVLW 0x01
08C8  00F0  	MOVWF FCD_Blueto_00022_arg_respo_00023
08C9  3064  	MOVLW 0x64
08CA  00F1  	MOVWF FCD_Blueto_00022_arg_timeout
08CB  2191  	CALL FCD_Blueto_00022
08CC  0877  	MOVF CompTempVarRet634, W
08CD  00E5  	MOVWF gbl_FCV_RET



	//Decision
	//Decision: RET <> 0?
	if( FCV_RET != 0 )
08CE  08E5  	MOVF gbl_FCV_RET, F
08D0  1D03  	BTFSS STATUS,Z

	{
		//Goto Connection Point
		//Goto Connection Point: A
		goto FCC_Main_A;
08CF  158A  	BSF PCLATH,3
08D1  28FA  	GOTO	label268440730



	}


	//Call Macro
	//Call Component Macro: LCDDisplay(0)::Clear
	FCD_LCDDisplay0_Clear();
08D2  118A  	BCF PCLATH,3
08D3  251A  	CALL FCD_LCDDis_00027



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII("*** DONE ***")
	FCD_LCDDisplay0_PrintASCII('*');
08D4  302A  	MOVLW 0x2A
08D5  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08D6  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('*');
08D7  302A  	MOVLW 0x2A
08D8  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08D9  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('*');
08DA  302A  	MOVLW 0x2A
08DB  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08DC  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII(' ');
08DD  3020  	MOVLW 0x20
08DE  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08DF  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('D');
08E0  3044  	MOVLW 0x44
08E1  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08E2  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('O');
08E3  304F  	MOVLW 0x4F
08E4  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08E5  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('N');
08E6  304E  	MOVLW 0x4E
08E7  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08E8  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('E');
08E9  3045  	MOVLW 0x45
08EA  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08EB  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII(' ');
08EC  3020  	MOVLW 0x20
08ED  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08EE  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('*');
08EF  302A  	MOVLW 0x2A
08F0  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08F1  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('*');
08F2  302A  	MOVLW 0x2A
08F3  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08F4  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('*');
08F5  302A  	MOVLW 0x2A
08F6  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08F7  2514  	CALL FCD_LCDDis_00028



	//Connection Point
	//Connection Point: C
FCC_Main_C:
08F8        label268441375



	//Goto Connection Point
	//Goto Connection Point: C
	goto FCC_Main_C;
08F8  158A  	BSF PCLATH,3
08F9  28F8  	GOTO	label268441375



	//Connection Point
	//Connection Point: A
FCC_Main_A:
08FA        label268440730



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII("error")
	FCD_LCDDisplay0_PrintASCII('e');
08FA  3065  	MOVLW 0x65
08FB  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
08FC  118A  	BCF PCLATH,3
08FD  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('r');
08FE  3072  	MOVLW 0x72
08FF  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0900  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('r');
0901  3072  	MOVLW 0x72
0902  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0903  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('o');
0904  306F  	MOVLW 0x6F
0905  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0906  2514  	CALL FCD_LCDDis_00028

	FCD_LCDDisplay0_PrintASCII('r');
0907  3072  	MOVLW 0x72
0908  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0909  2514  	CALL FCD_LCDDis_00028



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintASCII(" ")
	FCD_LCDDisplay0_PrintASCII(' ');
090A  3020  	MOVLW 0x20
090B  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
090C  2514  	CALL FCD_LCDDis_00028



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::PrintNumber(ERR)
	FCD_LCDDisplay0_PrintNumber(FCV_ERR);
090D  0861  	MOVF gbl_FCV_ERR, W
090E  00F0  	MOVWF FCD_LCDDis_0002C_arg_Number
090F  01F1  	CLRF FCD_LCDDis_0002C_arg_Number+D'1'
0910  2408  	CALL FCD_LCDDis_0002C



	//Call Macro
	//Call Component Macro: LCDDisplay(0)::Cursor(0, 1)
	FCD_LCDDisplay0_Cursor(0, 1);
0911  01F0  	CLRF FCD_LCDDis_0002B_arg_x
0912  3001  	MOVLW 0x01
0913  00F1  	MOVWF FCD_LCDDis_0002B_arg_y
0914  2503  	CALL FCD_LCDDis_0002B



	//Decision
	//Decision: RET = 255?
	if( FCV_RET == 255 )
0915  0A65  	INCF gbl_FCV_RET, W
0916  158A  	BSF PCLATH,3
0917  1D03  	BTFSS STATUS,Z
0918  2925  	GOTO	label268441410
0925        label268441410

	{
		//Call Macro
		//Call Component Macro: LCDDisplay(0)::PrintASCII("t/o")
		FCD_LCDDisplay0_PrintASCII('t');
0919  3074  	MOVLW 0x74
091A  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
091B  118A  	BCF PCLATH,3
091C  2514  	CALL FCD_LCDDis_00028

		FCD_LCDDisplay0_PrintASCII('/');
091D  302F  	MOVLW 0x2F
091E  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
091F  2514  	CALL FCD_LCDDis_00028

		FCD_LCDDisplay0_PrintASCII('o');
0920  306F  	MOVLW 0x6F
0921  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0922  2514  	CALL FCD_LCDDis_00028



	} else {
0923  158A  	BSF PCLATH,3
0924  2936  	GOTO	label268441429

		//Calculation
		//Calculation:
		//  LOOP = 0
		FCV_LOOP =  0 ;
0925  01E2  	CLRF gbl_FCV_LOOP

		

		//Loop
		//Loop: While LOOP < RET
		while( FCV_LOOP < FCV_RET )
0926        label268441428
0926  0865  	MOVF gbl_FCV_RET, W
0927  0262  	SUBWF gbl_FCV_LOOP, W
0928  1803  	BTFSC STATUS,C
0929  2936  	GOTO	label268441429
0934  158A  	BSF PCLATH,3
0935  2926  	GOTO	label268441428
0936        label268441429

		{
			//Call Macro
			//Call Component Macro: CHAR=Bluetooth(0)::StringRead(LOOP)
			FCV_CHAR = FCD_Bluetooth0_StringRead(FCV_LOOP);
092A  0862  	MOVF gbl_FCV_LOOP, W
092B  00F0  	MOVWF FCD_Blueto_00034_arg_idx
092C  118A  	BCF PCLATH,3
092D  2566  	CALL FCD_Blueto_00034
092E  0871  	MOVF CompTempVarRet721, W
092F  00E4  	MOVWF gbl_FCV_CHAR



			//Call Macro
			//Call Component Macro: LCDDisplay(0)::PrintASCII(CHAR)
			FCD_LCDDisplay0_PrintASCII(FCV_CHAR);
0930  00F0  	MOVWF FCD_LCDDis_00028_arg_Character
0931  2514  	CALL FCD_LCDDis_00028



			//Calculation
			//Calculation:
			//  LOOP = LOOP + 1
			FCV_LOOP =  FCV_LOOP + 1 ;
0932  0A62  	INCF gbl_FCV_LOOP, W
0933  00E2  	MOVWF gbl_FCV_LOOP

			

		}


	}


	mainendloop: goto mainendloop;
0936  2936  	GOTO	label268441429

}


void interrupt(void)

{
}
0960  1283  	BCF STATUS, RP0
0961  1303  	BCF STATUS, RP1
0962  0E50  	SWAPF Int1BContext+D'2', W
0963  0084  	MOVWF FSR
0964  0E4F  	SWAPF Int1BContext+D'1', W
0965  008A  	MOVWF PCLATH
0966  0E4E  	SWAPF Int1BContext, W
0967  0083  	MOVWF STATUS
0968  0EFF  	SWAPF Int1Context, F
0969  0E7F  	SWAPF Int1Context, W
096A  0009  	RETFIE





////////////////////////////////////////
// Code with no source :-)
////////////////////////////////////////
0000  158A  	BSF PCLATH,3
0001  2937  	GOTO	_startup

0004  00FF  	MOVWF Int1Context
0005  0E03  	SWAPF STATUS, W
0006  1283  	BCF STATUS, RP0
0007  1303  	BCF STATUS, RP1
0008  00CE  	MOVWF Int1BContext
0009  0E0A  	SWAPF PCLATH, W
000A  00CF  	MOVWF Int1BContext+D'1'
000B  0E04  	SWAPF FSR, W
000C  00D0  	MOVWF Int1BContext+D'2'
000D  158A  	BSF PCLATH,3
000E  120A  	BCF PCLATH,4
000F  2960  	GOTO	interrupt
0010        delay_10us_00000
0010        ; { delay_10us ; function begin
0010  08F9  	MOVF delay_10us_00000_arg_del, F
0011  1D03  	BTFSS STATUS,Z
0012  2814  	GOTO	label4026531848
0013  0008  	RETURN
0014        label4026531848
0014  3009  	MOVLW 0x09
0015        label4026531849
0015  0000  	NOP
0016  3EFF  	ADDLW 0xFF
0017  1D03  	BTFSS STATUS,Z
0018  2815  	GOTO	label4026531849
0019  0000  	NOP
001A  0000  	NOP
001B  0BF9  	DECFSZ delay_10us_00000_arg_del, F
001C  2814  	GOTO	label4026531848
001D  0008  	RETURN
001E        ; } delay_10us function end

001E        delay_ms_00000
001E        ; { delay_ms ; function begin
001E  08F2  	MOVF delay_ms_00000_arg_del, F
001F  1D03  	BTFSS STATUS,Z
0020  2822  	GOTO	label4026531858
0021  0008  	RETURN
0022        label4026531858
0022  30F5  	MOVLW 0xF5
0023        label4026531859
0023  0000  	NOP
0024  0000  	NOP
0025  0000  	NOP
0026  0000  	NOP
0027  0000  	NOP
0028  0000  	NOP
0029  0000  	NOP
002A  0000  	NOP
002B  0000  	NOP
002C  0000  	NOP
002D  0000  	NOP
002E  0000  	NOP
002F  0000  	NOP
0030  0000  	NOP
0031  0000  	NOP
0032  0000  	NOP
0033  3EFF  	ADDLW 0xFF
0034  1D03  	BTFSS STATUS,Z
0035  2823  	GOTO	label4026531859
0036  0000  	NOP
0037  0000  	NOP
0038  0000  	NOP
0039  0000  	NOP
003A  0000  	NOP
003B  0000  	NOP
003C  0000  	NOP
003D  0000  	NOP
003E  0000  	NOP
003F  0000  	NOP
0040  0000  	NOP
0041  0000  	NOP
0042  0000  	NOP
0043  0BF2  	DECFSZ delay_ms_00000_arg_del, F
0044  2822  	GOTO	label4026531858
0045  0008  	RETURN
0046        ; } delay_ms function end

0046        delay_s_00000
0046        ; { delay_s ; function begin
0046        label4026531864
0046  30FA  	MOVLW 0xFA
0047  00F2  	MOVWF delay_ms_00000_arg_del
0048  201E  	CALL delay_ms_00000
0049  30FA  	MOVLW 0xFA
004A  00F2  	MOVWF delay_ms_00000_arg_del
004B  201E  	CALL delay_ms_00000
004C  30FA  	MOVLW 0xFA
004D  00F2  	MOVWF delay_ms_00000_arg_del
004E  201E  	CALL delay_ms_00000
004F  30FA  	MOVLW 0xFA
0050  00F2  	MOVWF delay_ms_00000_arg_del
0051  201E  	CALL delay_ms_00000
0052  0BF0  	DECFSZ delay_s_00000_arg_del, F
0053  2846  	GOTO	label4026531864
0054  0008  	RETURN
0055        ; } delay_s function end


0124        __div_16_1_00003
0124        ; { __div_16_16 ; function begin
0124  01FB  	CLRF __div_16_1_00003_1_r
0125  01FC  	CLRF __div_16_1_00003_1_r+D'1'
0126  1683  	BSF STATUS, RP0
0127  1303  	BCF STATUS, RP1
0128  01A0  	CLRF CompTempVarRet140
0129  01A1  	CLRF CompTempVarRet140+D'1'
012A  01FD  	CLRF __div_16_1_00003_1_i
012B        label268435530
012B  1A7D  	BTFSC __div_16_1_00003_1_i,4
012C  0008  	RETURN
012D  1003  	BCF STATUS,C
012E  0DA0  	RLF CompTempVarRet140, F
012F  0DA1  	RLF CompTempVarRet140+D'1', F
0130  0DF5  	RLF __div_16_1_00003_arg_a, F
0131  0DF6  	RLF __div_16_1_00003_arg_a+D'1', F
0132  0DFB  	RLF __div_16_1_00003_1_r, F
0133  0DFC  	RLF __div_16_1_00003_1_r+D'1', F
0134  0878  	MOVF __div_16_1_00003_arg_b+D'1', W
0135  027C  	SUBWF __div_16_1_00003_1_r+D'1', W
0136  1D03  	BTFSS STATUS,Z
0137  293A  	GOTO	label268435535
0138  0877  	MOVF __div_16_1_00003_arg_b, W
0139  027B  	SUBWF __div_16_1_00003_1_r, W
013A        label268435535
013A  1C03  	BTFSS STATUS,C
013B  2943  	GOTO	label268435536
013C  0877  	MOVF __div_16_1_00003_arg_b, W
013D  02FB  	SUBWF __div_16_1_00003_1_r, F
013E  0878  	MOVF __div_16_1_00003_arg_b+D'1', W
013F  1C03  	BTFSS STATUS,C
0140  03FC  	DECF __div_16_1_00003_1_r+D'1', F
0141  02FC  	SUBWF __div_16_1_00003_1_r+D'1', F
0142  1420  	BSF CompTempVarRet140,0
0143        label268435536
0143  0AFD  	INCF __div_16_1_00003_1_i, F
0144  292B  	GOTO	label268435530
0145        ; } __div_16_16 function end


0937        _startup

095D  118A  	BCF PCLATH,3
095E  120A  	BCF PCLATH,4
095F  2DD6  	GOTO	main

2007  3F3A  	DW 0x3F3A
